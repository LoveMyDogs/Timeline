{
  
    
        "post0": {
            "title": "The Arguments That Surround You",
            "content": "Giannina Ortega Rico . Ms. Jenkins . AP English Language . 19 August 2022 . Doerfler and Moyn in the article “Why Liberals Need to Radically Change The Rules of Our Politics” argue that The Constitution is not what the United States of America should be witholden to, and as such we should use another system of government that discards it’s existence altogether. The authors then use their audience’s views in “liberalism” and abortion to argue that The Constitution is a block against progress and our society, and it is in our greatest interest to not have it control the country anymore. Afterwards, they propose their own system of government and law that would create equality between “high law” and everyday law, by ridding Congress of most of its powers and deciding everything by popular will. They support this system of government by stating it’s benefits and the possibility for change, while stating that it will create a more pure democracy in the USA. They also support their changes in Congress by comparing it to an already existing and performing system of Canada, showing real world applicable basis. . I disagree with both of Doefler and Moyn’s points, their distaste for high law and the system of government that they proposed, due to the need of an immovable basis in modern society and my lack of faith in voter laws. In recent times there has been an undermining of decade long legislature and growing division within the country; additionally, I have seen many groups of people (eg. Neo Nazi’s) that claim slavery was not actually that bad and slave owners were innocent people of their time, therefore, at least right now, I could not see many democratic instituions keeping their hold. These factors make me hold high and immutable law with esteem, especially in the current political climate in the United States. I also believe that the method they spoke of for congress and popular will is not achievable especially when the Senate is still in power. I also believe this would not be a favorable plan of action because currently, senators do not actually represent popular will or the vast majority of the population. Without a check for the senate, without a popular vote that isn’t repressed, then this reality would not be as ideal as it is portrayed. . https://www.nytimes.com/2022/08/19/opinion/liberals-constitution.html .",
            "url": "https://lovemydogs.github.io/Timeline/2022/09/26/The-Arguments-That-Surround-You.html",
            "relUrl": "/2022/09/26/The-Arguments-That-Surround-You.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Post with Table",
            "content": "&lt;!doctype html&gt; . Doing weird Stuff . Stuff Weird doing . . Dooroodoo Baradada loploplop mepmepmep reparapa hoohoola larudeeraa merodi",
            "url": "https://lovemydogs.github.io/Timeline/javascript/2022/09/25/table-javascript.html",
            "relUrl": "/javascript/2022/09/25/table-javascript.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Title",
            "content": "&lt;table class=&quot;table&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th scope=&quot;col&quot;&gt;#&lt;/th&gt; &lt;th scope=&quot;col&quot;&gt;First&lt;/th&gt; &lt;th scope=&quot;col&quot;&gt;Last&lt;/th&gt; &lt;th scope=&quot;col&quot;&gt;Handle&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th scope=&quot;row&quot;&gt;1&lt;/th&gt; &lt;td&gt;Mark&lt;/td&gt; &lt;td&gt;Otto&lt;/td&gt; &lt;td&gt;@mdo&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th scope=&quot;row&quot;&gt;2&lt;/th&gt; &lt;td&gt;Jacob&lt;/td&gt; &lt;td&gt;Thornton&lt;/td&gt; &lt;td&gt;@fat&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th scope=&quot;row&quot;&gt;3&lt;/th&gt; &lt;td&gt;Larry&lt;/td&gt; &lt;td&gt;the Bird&lt;/td&gt; &lt;td&gt;@twitter&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; .",
            "url": "https://lovemydogs.github.io/Timeline/2022/09/25/javascript-table.html",
            "relUrl": "/2022/09/25/javascript-table.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Groupwork",
            "content": "Scrum Team Roles and Project . Our Scrum team is made up of Ellie, Zeen, Keira, and Giannina. . Roles . Frontend: Ellie | Backend: Giannina | Scrum Master: Keira | DevOps: Zeen | . Project . Our project is a website largely focused on helping students with school activities with a side of sports. This is to help people who were struggling in the same position as us and make their lives the tiniest bit easier. . Sprint . First we will set up our website for the first two or so days, allowing Ellie to set up the CSS and other base background stuff. This will take us around 3 days through our usual schedule. Afterwards we will work on our volleyball section, probably taking the rest of our 7 days, first laying out the text of volleyball terms and strategies, and then adding in the visual element. If we finish early on this, we will start on the math section’s definition and terms section. . .",
            "url": "https://lovemydogs.github.io/Timeline/group/2022/09/25/groupwork-post.html",
            "relUrl": "/group/2022/09/25/groupwork-post.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "The Key to a Happy Life",
            "content": "The Process I’ll be Following . After watching the video assigned I took in 3 main points, that I have noticed some deficits in, in my daily life . Daily Happiness . From now I’m going to try doing things on the daily that are statistically proven to make people happy. I know it won’t exactly be easy or make me happy right away, but I’ll try to build the situation like a muscle as she said. There are several hobbies I could indulge in that I am thinking of doing for this, including some writing, but I’m hoping to pick up more ideas along the way . Socializing . I’ve always been an introvert, but I think I’ll try to attempt to talk to more people and form more connections, build a supportive community around myself. I’ve already sent appreciative messages to several of my friends, although I do that often anyhow, and I’ll try to make my life happier in that aspect. . The Present Moment . I’ll be trying to focus more on the present then the future. Even if an event that is fairly negative is happening in the moment, I’ll try to do actions to minimize that instead of trying to avoid it by thinking of my potential future happiness. Instead of escaping, from now on I’ll build every single moment to the best it can be. . Note of Gratitude . I’m really extremely grateful to my mom for providing for me and taking care of me every day, and I am also grateful for a friend I have on campus that commiserates with me on school work and helps me when I’m confused with anything . Collaboration with my Teammates . . Gratitude List . My Dogs | My Mom | My Hobbies | My Teachers | .",
            "url": "https://lovemydogs.github.io/Timeline/notes/2022/09/19/mental-health-habits.html",
            "relUrl": "/notes/2022/09/19/mental-health-habits.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Team Scrum Board Performance Task",
            "content": "Main Concept: . Website will be mostly school based | There will be a Math, Physics, Volleyball, and Gacha section | . For Math Section: . Will have AP Calculus as well as AP Statistics | Calculators, both for equations as well as normal calculations | Will have definitions as well as equations | For quizzes, there will be some for both AP Statistics and AP Calculus Both will have the page format: Start -&gt; Question -&gt; Incorrect page with how to solve/Correct page -&gt; Repeats until last page | . | . For Physics Section: . Very similar to the Math Section, but with Physics | Calculators for physics equations will be included, as well as definitions/terms | Will also have quizzes with the same format | . For Volleyball Section . Mostly volleyball terms, strategies, and etc. | Will also have images explaining terms/strategies | . For Gacha Section . Essentially a gacha calculator that gives random character pulls at a precent chance (likely using a print function) | Mostly just a &#39;For fun&#39; section, may or may not get to this but it would be fun to include | . Requirements . Knowledge of math | Knowledge of python math functions | Knowledge on quizzes | Knowledge of liquid for automation of certain portions | Probably other things as we flesh out the concept (will be decided later) | . Current Ability . At this point in time, we can already do the design and quiz portions, however the calculator for the math section and the gacha section will require us to learn more aspects of Python and Liquid There are probably other minute details we haven&#39;t noticed that we don&#39;t know how to do yet . Resources . We have Github, Google, VSCode, Youtube, Khan Academy, and the APCSP homepage to support us | . Notes . The reasoning we had for our website is that the math and science sections will support us in our studying and school lives, as well as help other students struggling in our school by providing them easy-to-access resources and learning materials. Volleyball stats will help us explore our interests while expanding our knowledge on computer science and its possibilities in many fields. The gacha section will help us learn more on probability and output for the end user, as well as being something fun to do to encourage us. . Work To Be Done . At the moment we are only considering brainstorming which we will do together, and then we will divide everything amongst each other. We are also waiting for more expectations to be laid out .",
            "url": "https://lovemydogs.github.io/Timeline/scrumboard/2022/09/11/please-begging.html",
            "relUrl": "/scrumboard/2022/09/11/please-begging.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Derivatives Quiz",
            "content": "Derivatives Quiz: Process . Link to Project . Project . Design . The base concept was testing something I am currently working on in math that I need to memorize, that being the derivative of inverse trigonometric functions. . Components . 6 questions | 2 hidden elements | If functions and variables | Lose screen, winning screen, hidden page, and the beginning page | Images for mathematical answers | Basic, eye pleasing graphics | . . Choices . Background colors were chosen to be mute so they did not distract from content, also chosen to be colors I like | Chose the first hidden function as a leftover from testing the different elements in the tool box, deciding to not delete one of my tests | Second hidden function was a way for me to try out canvas mode, and a fun way to not only be focused on calculus, spread through the quiz Also a method to experiment with if functions and variables | . | Canvas drawing was after seeing what it could do, and deciding to go out of bounds from what is normally done | . Individual Question Design . . Made to be as simple as possible, easily automated if not using block coding. Each correct answer and wrong answer are written in the same format, with the page name being written afterwards so they would not be mixed up between each other. If clicking the wrong answer you are taken to the “losing_page” where you are stuck forever, or have to restart the program (by design). If the right answer is clicked it takes you to the next page, which can also be automated if not block coding. The last code block is part of the hidden function, which is included in each question page, and you have to click every single one to get an end result. . Successes . Using variables and if functions | Using images as answers | Implementing hidden components | Creating quiz properly with score | . Discoveries . I discovered the canvas and how coordinates worked using it, as well as several ways to use functions . Challenges . My main challenge was in attempting to automate the question format. However, after trying it the code screen broke (I am not sure if it was because of my computer or odd code) with no true error, even messing with the block format, I decided to go with the other route since we are not using this format again, and there was not much code to repeat, however I did learn a method in the future to implement this type situation, as I felt I was on the right path if the coding interface had not broken. My other minor challenges were in making sure each thing was named correctly so it was easy to find, and making sure everything was in a proper place that could be found if I went back to change code. . Different Concept . I did not have the time to implement this, however making a mini game wherein it is a choose your own adventure would be plausible, maybe making a timeline using the canvas function. with the use of variables and “onEvent” many things can be created, as well as there conveniently being different screens. . To add new window to glask . Change it on navbar and define it on main.py .",
            "url": "https://lovemydogs.github.io/Timeline/applab/2022/09/11/app-lab-quiz.html",
            "relUrl": "/applab/2022/09/11/app-lab-quiz.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Title",
            "content": "",
            "url": "https://lovemydogs.github.io/Timeline/2022/09/06/time-box-jvsc-370a0034-f626-4c04-8f40-f9900872c32af6a637ce-4446-47f9-b054-7494464e22c9.html",
            "relUrl": "/2022/09/06/time-box-jvsc-370a0034-f626-4c04-8f40-f9900872c32af6a637ce-4446-47f9-b054-7494464e22c9.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Time Box",
            "content": "Creating a Time Box . . Week Date Links Description . Week 0 | August 21, 2022 | Review Ticket 0 | Setup | . Week 1 | August 28, 2022 | Review Ticket 1 | Learning more about python and personalizing | . Week 2 | September 05, 2022 | Review Ticket 2 | Learning about lists and dictionaries | .",
            "url": "https://lovemydogs.github.io/Timeline/markdown/2022/09/05/time-box.html",
            "relUrl": "/markdown/2022/09/05/time-box.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Changing Theme",
            "content": "Changing my Theme: Errors and Successes . The Results . The Successes . First down the line, all of my pages seemed to be working(jupyter, markdown, and docx posts all functioned well) Evidence: | . The Issues . The things that did seem to break are the icons on top and my “_pages” section no longer showing, as in there was no longer a way to search, look at tags, etc. . | Overall it was a success :D . | .",
            "url": "https://lovemydogs.github.io/Timeline/markdown/2022/09/05/changing-theme.html",
            "relUrl": "/markdown/2022/09/05/changing-theme.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Python Quiz Showcase",
            "content": "Pre-Explanation . I did this on another notebook however it refuses to work for no discernable reason therefore I am transferring the important part of it to here . import getpass, sys # This creates the function that I&#39;ll be using to create the quiz def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg # This creates the variables that will be used to calculate score questions = 5 correct = 0 # Introduces user to quiz print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_and_answer(&quot;Are you ready to take a test?&quot;) # Starts quiz rsp = question_with_response(&quot;What is 9+9&quot;) if rsp == &quot;18&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What is my favorite electronic device&quot;) if rsp == &quot;computer&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Do you have any pets?&quot;) if rsp == &quot;Yes&quot;: print(&quot;Yes? That&#39;s nice!&quot;) correct += 1 else: print(&quot;hrm, cool&quot;) correct += 1 rsp = question_with_response(&quot;Is this a fun quiz?&quot;) if rsp == &quot;no&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(&quot;herm&quot;) correct += 1 rsp = question_with_response(&quot;I&#39;ll let you go free now, are you enthused?&quot;) if rsp == &quot;Yes&quot;: print(&quot;hee, rude&quot;) correct += 1 else: print(&quot;welp&quot;) correct += 1 # Tells user their score print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Hello, gianninaortegarico running /Users/gianninaortegarico/opt/anaconda3/bin/python You will be asked 5 questions. Question: Are you ready to take a test? Answer: no Question: What is 9+9 18 is correct! Question: What is my favorite electronic device computer is correct! Question: Do you have any pets? Yes? That&#39;s nice! Question: Is this a fun quiz? no is correct! Question: I&#39;ll let you go free now, are you enthused? hee, rude gianninaortegarico you scored 5/5 . from random import seed from random import randint # Introducing what will be happening to a bored audience print(&quot;Hey, I&#39;m trying out python, let&#39;s experience this quick simple story together!&quot;) print(&quot;Note: As you go through this journey remember to only respond with &#39;Yes&#39; or &#39;No&#39;&quot;) def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg # Using variables for choices that I&#39;ll be creating choice_1 = 0 choice_2 = 0 choice_3 = 0 choice_4 = 0 choice_5 = 0 random = 0 # Starting the choices print(&quot;Today, you wake up, a day filled with possibilities, it is softly drizzling outside, and you slept a full 6 hours &quot;) rsp = question_with_response(&quot;Now, do you get up and shower?&quot;) if rsp == &quot;Yes&quot;: choice_1 = 1 print(&quot;The shower is nice and refreshing, washing of a night&#39;s worth of stink&quot;) elif rsp == &quot;No&quot;: choice_1 = 0 print(&quot;You lay in your bed, wallowing in a bit of stink, it felt like a lazy day&quot;) else: print(&quot;Remember that your choices have to be &#39;Yes&#39; or &#39;No&#39; exactly, your future is a mystery&quot;) random = randint(0,1) choice_1 = random rsp = question_with_response(&quot;Breakfast is in order, is it worth it to make it?&quot;) if rsp == &quot;Yes&quot;: choice_2 = 1 print(&quot;You make your favorite breakfast, and it turned out above par, you feel happy&quot;) elif rsp == &quot;No&quot;: choice_2 = 0 print(&quot;You&#39;re still a bit full from eating two steaks last night, so you decide not to, although feel a bit like you&#39;re missing out&quot;) else: print(&quot;Remember that your choices have to be &#39;Yes&#39; or &#39;No&#39; exactly, your future is a mystery&quot;) random = randint(0,1) choice_2 = random rsp = question_with_response(&quot;Time to decide what you&#39;re doing today, is it work time?&quot;) if rsp == &quot;Yes&quot; : choice_3 = 1 print(&quot;You make your favorite breakfast, and it turned out above par, you feel happy&quot;) elif rsp == &quot;No&quot;: choice_3 = 0 print(&quot;You&#39;re still a bit full from eating two steaks last night, so you decide not to, although feel a bit like you&#39;re missing out&quot;) else: print(&quot;Remember that your choices have to be &#39;Yes&#39; or &#39;No&#39; exactly, your future is a mystery&quot;) random = randint(0,1) choice_3 = random . # Import random number generator from random import randint # Defining my variables here score = 0 online = True # Use a dictionary for the questions quesDict = { 0: &quot;What is the tallest mountain in the world&quot;, 1: &quot;What is 2+5?&quot;, 2: &quot;What programming language was used to make this quiz?&quot;, 3: &quot;How many programming languages does the creator of this quiz know?&quot;, 4: &quot;What is the favorite coding part of python for the creator of this quiz?&quot;, 5: &quot;What is a nice little tune?&quot;, 6: &quot;Tick?&quot;, } # Use a dictionary for the correct solutions soluDict = { 0: &quot;Mount Everest&quot;, 1: &quot;7&quot;, 2: &quot;Python&quot;, 3: &quot;0&quot;, 4: &quot;Variables&quot;, 5: &quot;Ladaradadeedoo&quot;, 6: &quot;Tock&quot;, } print(&quot;When playing this game, you will go through a list of 7 questions in a randomized order, if you get a question wrong the test is over and you get your final score, good luck! n&quot;) while online: index = randint(0, 6) print(quesDict.get(index) + &quot; n&quot;) guess = input() if(guess == soluDict.get(index)): score+=1 print(&quot;Correct! Score: &quot; + str(score)) else: print(&quot;Incorrect! The correct answer was &quot; + soluDict.get(index) + &quot;, Final score: &quot; + str(score)) online = False . When playing this game, you will go through a list of 7 questions in a randomized order, if you get a question wrong the test is over and you get your final score, good luck! Tick? Incorrect! The correct answer was Tock, Final score: 0 . # Defining my variables here score = 0 quesAmou = -1 # Use a dictionary for the questions quesDict = { 0: &quot;What is the tallest mountain in the world&quot;, 1: &quot;What is 2+5?&quot;, 2: &quot;What programming language was used to make this quiz?&quot;, 3: &quot;How many programming languages does the creator of this quiz know?&quot;, 4: &quot;What is the favorite coding part of python for the creator of this quiz?&quot;, 5: &quot;What is a nice little tune?&quot;, 6: &quot;Tick?&quot;, } # Use a dictionary for the correct solutions soluDict = { 0: &quot;Mount Everest&quot;, 1: &quot;7&quot;, 2: &quot;Python&quot;, 3: &quot;0&quot;, 4: &quot;Variables&quot;, 5: &quot;Ladaradeedoo&quot;, 6: &quot;Tock&quot;, } print(&quot;When playing this game, you will go through a list of 7 questions, remember to capitalize your answers and do your best!&quot;) while quesAmou &lt;= 5: quesAmou += 1 print(quesDict.get(quesAmou) + &quot; n&quot;) guess = input() if(guess == soluDict.get(quesAmou)): score+=1 print(&quot;Correct! Score: &quot; + str(score)) else: print(&quot;Incorrect! The correct answer was &quot; + soluDict.get(quesAmou) + &quot; n&quot;) print(&quot;Final score: &quot; + str(score)) . When playing this game, you will go through a list of 7 questions, remember to capitalize your answers and do your best! What is the tallest mountain in the world Correct! Score: 1 What is 2+5? Correct! Score: 2 What programming language was used to make this quiz? Correct! Score: 3 How many programming languages does the creator of this quiz know? Correct! Score: 4 What is the favorite coding part of python for the creator of this quiz? Correct! Score: 5 What is a nice little tune? Correct! Score: 6 Tick? Correct! Score: 7 Final score: 7 .",
            "url": "https://lovemydogs.github.io/Timeline/python/2022/08/29/python-quiz.html",
            "relUrl": "/python/2022/08/29/python-quiz.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Lists, Dictionaries, Iteration",
            "content": "Lists and Dictionaries . As a quick review we used variables in the introduction last week. Variables all have a type: String, Integer, Float, List and Dictionary are some key types. In Python, variables are given a type at assignment, Types are important to understand and will impact operations, as we saw when we were required to user str() function in concatenation. . Developers often think of variables as primitives or collections. Look at this example and see if you can see hypothesize the difference between a primitive and a collection. | Take a minute and see if you can reference other elements in the list or other keys in the dictionary. Show output. | # variable of type string name = &quot;Giannina Ortega Rico&quot; print(&quot;name&quot;, name, type(name)) # variable of type integer age = 16 print(&quot;age&quot;, age, type(age)) # variable of type float score = 12.0 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) langs = [&quot;Python&quot;, &quot;Bash&quot;] print(&quot;langs&quot;, langs, type(langs)) print(&quot;- langs[1]&quot;, langs[1], type(langs[1])) print() # variable of type dictionary (a group of keys and values) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . name Giannina Ortega Rico &lt;class &#39;str&#39;&gt; age 16 &lt;class &#39;int&#39;&gt; score 12.0 &lt;class &#39;float&#39;&gt; langs [&#39;Python&#39;, &#39;Bash&#39;] &lt;class &#39;list&#39;&gt; - langs[1] Bash &lt;class &#39;str&#39;&gt; person {&#39;name&#39;: &#39;Giannina Ortega Rico&#39;, &#39;age&#39;: 16, &#39;score&#39;: 12.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;Bash&#39;]} &lt;class &#39;dict&#39;&gt; - person[&#34;name&#34;] Giannina Ortega Rico &lt;class &#39;str&#39;&gt; . List and Dictionary purpose . Our society is being build on information. List and Dictionaries are used to collect information. Mostly, when information is collected it is formed into patterns. As that pattern is established you will collect many instances of that pattern. . List is used to collect many | Dictionary is used to define data patterns. | Iteration is often used to process through lists. | . To start exploring more deeply into List, Dictionary and Iteration we will explore constructing a List of people and cars. . As we learned above, List is a data type: class &#39;list&#39; | A &#39;list&#39; data type has the method &#39;.append(expression)&#39; that allows you to add to the list | In the example below, the expression appended to the &#39;list&#39; is the data type: class &#39;dict&#39; | At the end, you see a fairly complicated data structure. This is a list of dictionaries. The output looks similar to JSON and we will see this often, you will be required to understand this data structure and understand the parts. Easy peasy ;). | . InfoDb = [] # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortensen&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;jmortensen@powayusd.com&quot;, &quot;Favorite_Food&quot;: &quot;Bitcoin&quot;, &quot;Hobbies&quot;: &quot;Bitcoin Mining&quot;, &quot;Mannerism&quot;: &quot;Direct&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;4Runner&quot;], &quot;Favorite_Food&quot;: &quot;Pizza&quot;, &quot;Hobbies&quot;: &quot;Fishing&quot;, &quot;Mannerism&quot;:[&quot;Honest&quot;, &quot;Kind&quot;, &quot;Stubborn&quot;] }) # My info as a 3rd dictionary InfoDb.append({ &quot;FirstName&quot;: &quot;Giannina&quot;, &quot;LastName&quot;: &quot;Ortega Rico&quot;, &quot;DOB&quot;: &quot;March 09&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;gianninao19231@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;None&quot;], &quot;Favorite_Food&quot;: &quot;Noodles&quot;, &quot;Hobbies&quot;: &quot;Reading, Watching Videos&quot;, &quot;Mannerism&quot;: &quot;Hrm&quot; }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;John&#39;, &#39;LastName&#39;: &#39;Mortensen&#39;, &#39;DOB&#39;: &#39;October 21&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;jmortensen@powayusd.com&#39;, &#39;Favorite_Food&#39;: &#39;Bitcoin&#39;, &#39;Hobbies&#39;: &#39;Bitcoin Mining&#39;, &#39;Mannerism&#39;: &#39;Direct&#39;, &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]}, {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;DOB&#39;: &#39;August 2&#39;, &#39;Residence&#39;: &#39;Temecula&#39;, &#39;Email&#39;: &#39;snaidu@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;4Runner&#39;], &#39;Favorite_Food&#39;: &#39;Pizza&#39;, &#39;Hobbies&#39;: &#39;Fishing&#39;, &#39;Mannerism&#39;: [&#39;Honest&#39;, &#39;Kind&#39;, &#39;Stubborn&#39;]}, {&#39;FirstName&#39;: &#39;Giannina&#39;, &#39;LastName&#39;: &#39;Ortega Rico&#39;, &#39;DOB&#39;: &#39;March 09&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;gianninao19231@stu.powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;None&#39;], &#39;Favorite_Food&#39;: &#39;Noodles&#39;, &#39;Hobbies&#39;: &#39;Reading, Watching Videos&#39;, &#39;Mannerism&#39;: &#39;Hrm&#39;}] . Formatted output of List/Dictionary - for loop . Managing data in Lists and Dictionaries is for the convenience of passing the data across the internet or preparing it to be stored into a database. Also, it is a great way to exchange data inside of our own programs. . Next, we will take the stored data and output it within our notebook. There are multiple steps to this process... . Preparing a function to format the data, the print_data() function receives a parameter called &quot;d_rec&quot; short for dictionary record. It then references different keys within [] square brackets. | Preparing a function to iterate through the list, the for_loop() function uses an enhanced for loop that pull record by record out of InfoDb until the list is empty. Each time through the loop it call print_data(record), which passes the dictionary record to that function. | Finally, you need to activate your function with the call to the defined function for_loop(). Functions are defined, not activated until they are called. By placing for_loop() at the left margin the function is activated. | . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) # Living thisl ife print(&quot; t&quot;, &quot;Favorite Food:&quot;, d_rec[&quot;Favorite_Food&quot;]) # doing this and that print(&quot; t&quot;, &quot;Hobbies:&quot;, d_rec[&quot;Hobbies&quot;]) # Ladaradeeda print(&quot; t&quot;, &quot;Mannerisms:&quot;, d_rec[&quot;Mannerism&quot;]) # doo doo print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output John Mortensen Residence: San Diego Birth Day: October 21 Favorite Food: Bitcoin Hobbies: Bitcoin Mining Mannerisms: Direct Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Favorite Food: Pizza Hobbies: Fishing Mannerisms: [&#39;Honest&#39;, &#39;Kind&#39;, &#39;Stubborn&#39;] Cars: 4Runner Giannina Ortega Rico Residence: San Diego Birth Day: March 09 Favorite Food: Noodles Hobbies: Reading, Watching Videos Mannerisms: Hrm Cars: None . Alternate methods for iteration - while loop . In coding, there are usually many ways to achieve the same result. Defined are functions illustrating using index to reference records in a list, these methods are called a &quot;while&quot; loop and &quot;recursion&quot;. . The while_loop() function contains a while loop, &quot;while i &lt; len(InfoDb):&quot;. This counts through the elements in the list start at zero, and passes the record to print_data() | . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output John Mortensen Residence: San Diego Birth Day: October 21 Favorite Food: Bitcoin Hobbies: Bitcoin Mining Mannerisms: Direct Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Favorite Food: Pizza Hobbies: Fishing Mannerisms: [&#39;Honest&#39;, &#39;Kind&#39;, &#39;Stubborn&#39;] Cars: 4Runner Giannina Ortega Rico Residence: San Diego Birth Day: March 09 Favorite Food: Noodles Hobbies: Reading, Watching Videos Mannerisms: Hrm Cars: None . Calling a function repeatedly - recursion . This final technique achieves looping by calling itself repeatedly. . recursive_loop(i) function is primed with the value 0 on its activation with &quot;recursive_loop(0)&quot; | the last statement indented inside the if statement &quot;recursive_loop(i + 1)&quot; activates another call to the recursive_loop(i) function, each time i is increasing | ultimately the &quot;if i &lt; len(InfoDb):&quot; will evaluate to false and the program ends | . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output John Mortensen Residence: San Diego Birth Day: October 21 Favorite Food: Bitcoin Hobbies: Bitcoin Mining Mannerisms: Direct Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Favorite Food: Pizza Hobbies: Fishing Mannerisms: [&#39;Honest&#39;, &#39;Kind&#39;, &#39;Stubborn&#39;] Cars: 4Runner Giannina Ortega Rico Residence: San Diego Birth Day: March 09 Favorite Food: Noodles Hobbies: Reading, Watching Videos Mannerisms: Hrm Cars: None . tune = [&quot;ladaradeeda&quot;, &quot;ladaradeedoo&quot;, &quot;baramdarandadun&quot;, &quot;lotta things to do&quot;, &quot;dooroodoodoo-dooroo&quot;] # while loop contains an initial n and an index incrementing statement (n += 1) def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(tune): print(tune[i]) i += 1 return while_loop() def while_loop(): print(&quot;While loop output n&quot;) i = 4 while i &gt;= 0: print(tune[i]) i -= 1 return while_loop() print(&quot; n&quot;) # For loop part for index, val in enumerate(tune): print(index, val) . While loop output ladaradeeda ladaradeedoo baramdarandadun lotta things to do dooroodoodoo-dooroo While loop output dooroodoodoo-dooroo lotta things to do baramdarandadun ladaradeedoo ladaradeeda 0 ladaradeeda 1 ladaradeedoo 2 baramdarandadun 3 lotta things to do 4 dooroodoodoo-dooroo . posDb = [] # Bringing in a random number generator from random import randint # Append to List a Dictionary of key/values related to a person and cars posDb.append({ &quot;&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortensen&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;jmortensen@powayusd.com&quot;, &quot;Favorite_Food&quot;: &quot;Bitcoin&quot;, &quot;Hobbies&quot;: &quot;Bitcoin Mining&quot;, &quot;Mannerism&quot;: &quot;Direct&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) possDict = { 0: &quot;Man&quot;, 1: &quot;Gotta&quot;, 2: &quot;Lot&quot;, 3: &quot;To&quot;, 4: &quot;Do&quot; } print(&quot;Going to arbitrarily decide if you win or lose&quot;) base = randint(0,4) if(possDict.get(base) == &quot;Gotta&quot;): print(&quot;You win!&quot;) else: print(&quot;you lose, they were different&quot;) . Going to arbitrarily decide if you win or lose You win! . Hacks . Add a couple of records to the InfoDb | Try to do a for loop with an index | Pair Share code somethings creative or unique, with loops and data. Hints... Would it be possible to output data in a reverse order? | Are there other methods that can be performed on lists? | Could you create new or add to dictionary data set? Could you do it with input? | Make a quiz that stores in a List of Dictionaries. | . | .",
            "url": "https://lovemydogs.github.io/Timeline/collegeboard/2022/08/29/TP120-python_lists.html",
            "relUrl": "/collegeboard/2022/08/29/TP120-python_lists.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Using Bash Knowledge",
            "content": "arch -arm64 brew install ... # Checks that brew is up to date brew list brew update brew upgrade # brew install git brew install python python --version brew install java . ==&gt; Tapping homebrew/cask Cloning into &#39;/opt/homebrew/Library/Taps/homebrew/homebrew-cask&#39;... remote: Enumerating objects: 667203, done. remote: Counting objects: 100% (126/126), done. remote: Compressing objects: 100% (62/62), done. remote: Total 667203 (delta 68), reused 118 (delta 64), pack-reused 667077 Receiving objects: 100% (667203/667203), 317.25 MiB | 1.58 MiB/s, done. Resolving deltas: 100% (473217/473217), done. Tapped 4053 casks (4,125 files, 338.5MB). Warning: No available formula with the name &#34;...&#34;. ==&gt; Searching for similarly named formulae... These similarly named formulae were found: a2ps libquicktime a52dec libquvi aacgain libraqm aalib librasterlite aamath librasterlite2 aarch64-elf-binutils libraw aarch64-elf-gcc librcsc aardvark_shell_utils librdkafka abcde libre abcl libreadline-java abcm2ps librealsense abcmidi librem abduco libreplaygain abi-compliance-checker libresample abi-dumper librespot abnfgen libressl abook librest abricate librevenge abseil librist ✔ abuse librsvg abyss librsync ace librtlsdr aces_container librttopo ack libsamplerate ✔ acl libsass acl2 libsbol acme libscrypt acmetool libseccomp acpica libsecret act libserdes actionlint libserialport activemq libshout activemq-cpp libsigc++ adamstark-audiofile libsigc++@2 adios2 libsignal-protocol-c admesh libsigrok adns libsigrokdecode adplug libsigsegv adr-tools libsixel advancecomp libslax advancemame libslirp advancescan libsm adwaita-icon-theme libsmf aerc libsmi aescrypt libsndfile ✔ aescrypt-packetizer libsodium ✔ aespipe libsoundio afflib libsoup afio libsoup@2 afl-fuzz libsoxr ✔ afsctool libspatialite aften libspectre afuse libspectrum agda libspiro age libspnav age-plugin-yubikey libspng agedu libsquish aggregate libssh aha libssh2 ahcpd libstatgrab ahoy libstfl aida-header libstrophe aide libstxxl aircrack-ng libsvg airshare libsvg-cairo airspy libsvm airspyhf libswiften akamai libswiftnav akka libtar alac libtasn1 ✔ alda libtcod aldo libtecla alembic libtensorflow alerter libtensorflow@1 alexjs libtermkey algernon libtextcat algol68g libtiff ✔ aliddns libtins align libtirpc aliyun-cli libtomcrypt all-repos libtommath allegro libtool ✔ allure libtorch allureofthestars libtorrent-rakshasa alluxio libtorrent-rasterbar alot libtpms alp libtrace alpine libtrng alpscore libu2f-host alsa-lib libu2f-server alure libucl amazon-ecs-cli libuecc amdatu-bootstrap libuninameslist amfora libunistring ✔ ammonite-repl libunwind amp libunwind-headers ampl-mp libupnp amqp-cpp libusb amtk libusb-compat amtterm libusbmuxd analog libusrsctp angband libuv angle-grinder libuvc angular-cli libva anime-downloader libvatek anjuta libvdpau ansible libvidstab ✔ ansible-cmdb libvirt ansible-language-server libvirt-glib ansible-lint libvisio ansible@2.8 libvmaf ✔ ansible@2.9 libvnc ansifilter libvncserver ansilove libvo-aacenc ansiweather libvoikko ant libvorbis ✔ ant-contrib libvpx ✔ ant@1.9 libvterm antibody libwandevent antigen libwbxml antiword libwebm antlr libwebsockets antlr4-cpp-runtime libwmf antlr@2 libwpd anttweakbar libwpg anycable-go libwps anyenv libx11 ✔ aoeui libxau ✔ aom ✔ libxaw apache-archiva libxaw3d apache-arrow libxc apache-arrow-glib libxcb ✔ apache-brooklyn-cli libxcomposite apache-ctakes libxcrypt apache-drill libxcursor apache-flink libxcvt apache-forrest libxdamage apache-geode libxdg-basedir apache-opennlp libxdiff apache-pulsar libxdmcp ✔ apache-spark libxext ✔ apachetop libxfixes apcupsd libxfont apgdiff libxfont2 apib libxft apibuilder-cli libxi apidoc libxinerama apktool libxkbcommon apm-bash-completion libxkbfile apng2gif libxls apngasm libxlsxwriter apollo libxmi apollo-cli libxml++ app-engine-java libxml++3 app-engine-python libxml++@4 apparix libxml++@5 appium libxml2 appscale-tools libxmlsec1 appstream-glib libxmp apr libxmp-lite apr-util libxmu apt libxo apt-dater libxp aptly libxpm aqbanking libxrandr arabica libxrender ✔ arangodb libxres aravis libxscrnsaver arb libxshmfence arcade-learning-environment libxslt archey libxspf archey4 libxt archi-steam-farm libxtst archivemount libxv archiver libxvmc arduino-cli libxxf86dga argo libxxf86vm argocd libyaml argocd-autopilot libyubikey argocd-vault-plugin libzdb argon2 libzip argp-standalone libzzip argtable licensefinder argus licensor argus-clients lifelines argyll-cms lightgbm aria2 lighthouse arkade lightning arm-linux-gnueabihf-binutils lighttpd armadillo lilv armor lilypond arp-scan lima arp-sk lincity-ng arpack link-grammar arping linkerd arpoison linklint arrayfire links arss linode-cli artifactory linux-headers@4.15 artillery linux-headers@4.4 arturo linux-headers@5.15 arx-libertatis linux-headers@5.16 arxiv_latex_cleaner linux-pam as-tree liqoctl ascii liquibase ascii2binary liquid-dsp asciidoc liquidctl asciidoctor liquidprompt asciidoctorj liquigraph asciinema lit asciiquarium litani asciitex litecli asdf literate-git asimov little-cms asio little-cms2 ✔ ask-cli livekit asn1c livekit-cli aspcud livestreamer aspectj lizard aspell lizard-analyzer asroute lldpd assh llnode assimp llvm astro llvm@11 astrometry-net llvm@12 astyle llvm@13 asuka llvm@7 asymptote llvm@8 asyncapi llvm@9 asyncplusplus lm-sensors at-spi2-atk lm4tools at-spi2-core lmdb atari800 lmod atasm lnav atdtool lndir aterm loc atf localstack athenacli localtunnel atk locateme atkmm lockrun atkmm@2.28 locust atlantis log4c atlas log4cplus atmos log4cpp atomicparsley log4cxx atomist-cli log4shib atool logcheck atop logcli ats2-postiats logrotate attr logstalgia atuin logstash aubio logswan audacious logtalk audiofile loki auditbeat lolcat augeas lolcode augustus lorem aurora loudmouth austin lout authoscope lp_solve autobench lpc21isp autocannon lrdf autocode lrzip autoconf lrzsz autoconf-archive lsd autoconf@2.13 lsdvd autoconf@2.69 lsix autodiff lsof autoenv lsusb autogen lsyncd autojump ltc-tools automake ltex-ls automysqlbackup ltl2ba autopep8 lttng-ust autopsy lua autorest lua-language-server autorestic lua@5.1 autossh lua@5.3 avahi luabind avanor luajit avce00 luajit-openresty avfs luaradio aview luarocks avimetaedit luau avra luaver avrdude lucky-commit avro-c luit avro-cpp lunar-date avro-tools lunchy awf lunchy-go awk lunzip aws-apigateway-importer lutok aws-auth luv aws-cdk luvit aws-cfn-tools lux aws-console lv aws-elasticbeanstalk lv2 aws-es-proxy lwtools aws-google-auth lxc aws-iam-authenticator lxsplit aws-keychain ly aws-nuke lychee aws-okta lynis aws-rotate-key lynx aws-sdk-cpp lz4 ✔ aws-shell lzfse aws-sso-util lzip aws-vault lziprecover aws2-wrap lzlib awscli lzo ✔ awscli@1 lzop awscurl m-cli awslogs m4 ✔ awsume mabel awsweeper mac-robber axel macchina azcopy mackup aztfy maclaunch azure-cli macos-term-size azure-storage-cpp macos-trash b2-tools macosvpn b2sum macvim b3sum mad b43-fwcutter madplay babel mafft babeld mage babl magic-wormhole backupninja magic_enum bacula-fd mahout bagit mailcatcher baidupcs-go mailcheck balena-cli mailhog ballerburg mailutils ballerina mairix bam make bamtools makedepend bandcamp-dl makefile2graph bandit makeicns bandwhich makensis baobab makepkg bar makeself bareos-client malbolge baresip mallet bartib mame bartycrouch man-db bas55 man2html base64 mandoc base91 mandown basex manifest-tool bash manticoresearch bash-completion mapcidr bash-completion@2 mapcrafter bash-git-prompt mapnik bash-language-server mapproxy bash-preexec mapserver bash-snippets marcli bash_unit mariadb bashdb mariadb-connector-c bashish mariadb-connector-odbc basis_universal mariadb@10.1 bastet mariadb@10.2 bat mariadb@10.3 bat-extras mariadb@10.4 batik mariadb@10.5 bats mariadb@10.6 bats-core mariadb@10.7 bazaar markdown bazel markdown-toc bazelisk markdownlint-cli bbe marked bbftp-client marp-cli bbtools mas bc mask bcal masscan bcftools massdns bchunk massren bcoin mat2 bcpp math-comp bcrypt mathlibtools bde matlab2tikz bdw-gc ✔ matplotplusplus beagle matterbridge beancount maturin beansdb maven beanstalkd maven-completion bear maven-shell beast maven@3.2 bedops maven@3.3 bedtools maven@3.5 bee mavsdk beecrypt mawk befunge93 maxima bench maxwell benthos mbedtls ✔ bento4 mbedtls@2 berglas mbelib berkeley-db mbt berkeley-db@4 mbw berkeley-db@5 mcabber bettercap mcap betty mcfly bfg mcpp bfgminer mcrypt bgpdump md4c bgpq3 md5deep bgpq4 md5sha1sum bgpstream mda-lv2 bgrep mdbook bib-tool mdbtools bibclean mdcat biber mdds bibtex2html mdf2iso bibtexconv mdk bibutils mdp bic mdr bigloo mdv binaryen mdxmini bind mdzk bindfs mecab bingrep mecab-ipadic binkd mecab-jumandic binutils mecab-ko binwalk mecab-ko-dic bioawk mecab-unidic bioperl mecab-unidic-extended biosig media-info bison mediaconch bison@2.7 mednafen bit meek bit-git megacmd bitchx megatools bitcoin meilisearch bitlbee melody bitrise memcache-top bittwist memcached bitwarden-cli memcacheq bitwise memtester bk menhir bkt mercurial black mercury blackbox mergelog blahtexml mergepbx blast mermaid-cli blastem mesa blaze mesa-glu blazeblogger mesalib-glw blazegraph mesheryctl blink1 meson blis mesos blitz metabase blitzwave metalang99 bloaty metaproxy blockhash metashell blogc metis bltool metricbeat bluepill mfcuk bluetoothconnector mfoc blueutil mfterm bmake mftrace bmon mg bnd mgba bnfc mhash bochs mhonarc bogofilter micro bombadillo micro_inetd bond micronaut bonnie++ microplane bookloupe micropython boom-completion microsocks boost midgard2 boost-bcp midicsv boost-build midnight-commander boost-mpi mighttpd2 boost-python3 mikmod boost@1.76 mikutter boot-clj mill bootloadhid miller bore-cli mimalloc borgbackup mimic borgmatic minbif boringtun minetest bork mingw-w64 bosh-cli minica botan minicom bottom minidjvu bower minidlna bowtie2 minikube box2d minimal-racket boxes minimap2 bpm-tools minimesos bpython minimodem bpytop minio brag minio-mc braid minipro brainfuck minisat breezy minised brev miniserve brew-cask-completion minisign brew-gem miniupnpc brew-php-switcher minizinc brew-pip minizip brigade-cli minizip-ng brightness mint briss minuit2 brogue miruo brook mist broot mit-scheme brotli ✔ mitie browser mitmproxy bsdconv mix-completion bsdiff mjpegtools bsdmake mk-configure bsdsfv mkcert bsponmpi mkclean btfs mkcue btop mkdocs btparse mkfontscale btpd mkhexgrid bubblewrap mkp224o buildapp mksh buildifier mktorrent buildkit mkvalidator buildozer mkvdts2ac3 buildpulse-test-reporter mkvtomp4 buku mkvtoolnix bulk_extractor mle bullet mlkit bumpversion mlogger bundler-completion mlpack bundletool mlt bup mlton bupstash mm-common burl mmark burp mmctl burst mmix butane mmseqs2 bvi mmsrip bvm mmtabbarview bwa mmv bwctl moar bwfmetaedit moarvm bwm-ng mobiledevice byacc moc byobu mockery byteman mockolo bzip2 mockserver bzr-builder moco bzr-colo modd bzr-externals modgit bzr-extmerge modman bzr-rewrite modules bzr-upload moe bzr-xmloutput mogenerator bzrtools mold bzt molecule c-ares molten-vk c-blosc mon c-kermit monero c10t monetdb c14-cli mongo-c-driver c2048 mongo-cxx-driver c2rust mongo-orchestration c7n mongocli ca-certificates ✔ mongodb-atlas-cli cabal-install mongoose cabextract mongosh cabocha mongrel2 cacli mongroup cadaver monika caddy monit cadence monitoring-plugins cadence-workflow monkeysphere cadical mono cadubi mono-libgdiplus caf monolith cafeobj montage caffe moon-buggy caire moreutils cairo ✔ morse cairomm mosh cairomm@1.14 mosml cake mosquitto calabash most calc moto calceph movgrab calcurse moz-git-tools calicoctl mozjpeg camellia mp3blaster camlp5 mp3cat canfigger mp3check cap-completion mp3fs capnp mp3gain capstone mp3info cargo-audit mp3splt cargo-bloat mp3unicode cargo-bundle mp3val cargo-c mp3wrap cargo-crev mp4v2 cargo-depgraph mpack cargo-edit mpage cargo-instruments mpc cargo-llvm-lines mpck cargo-nextest mpd cargo-outdated mpdas cargo-udeps mpdecimal ✔ cargo-watch mpdscribble carla mpdviz carrot2 mpegdemux carthage mpfi carton mpfr cartridge-cli mpg123 cash-cli mpg321 cask mpgtx cassandra mpi4py cassandra-cpp-driver mpich cassandra-reaper mpir cassandra@2.1 mplayer cassandra@2.2 mplayershell cassandra@3 mpop cassowary mprocs castget mps-youtube castxml mpssh cataclysm mpv catch2 mpw catimg mr cattle mrbayes cava mrboom cayley mrtg cbc mruby cbmbasic mruby-cli cbmc msc-generator cc65 mscgen ccache msdl ccal msgpack ccat msgpack-cxx ccd2iso msgpack-tools ccextractor msgpuck ccfits msitools ccheck msktutil ccls msmtp ccm mspdebug cconv mstch ccrypt mt32emu cctz mtoc ccze mtools cd-discid mtr cdargs mu cdb mu-repo cddlib muffet cdecl mujs cdk multi-git-status cdk8s multimarkdown cdktf multitail cdlabelgen multitime cdo muparser cdogs-sdl mupdf cdparanoia mupdf-tools cdpr mupen64plus cdrdao murex cdrtools musepack cedille mussh celero mutt censys mvnvm center-im mvtools cereal mx ceres-solver mycli cern-ndiff mydumper certbot myman certigo mypaint-brushes certstrap mypy ceylon mysql cf mysql++ cf-tool mysql-client cf4ocl mysql-client@5.7 cfengine mysql-connector-c++ cfitsio mysql-sandbox cflow mysql-search-replace cfn-flip mysql@5.6 cfn-format mysql@5.7 cfn-lint mysqltuner cfonts mytop cfr-decompiler n cfssl naabu cfv nacl cgal naga cgdb nagios cgif nagios-plugins cgit nailgun cgl nali cglm name-that-hash cgns namebench cgoban naml cgrep nano cgvg nanoflann chadwick nanomsg chafa nanomsgxx chain-bench nanopb-generator chaiscript nanorc chakra narwhal chalk-cli nasm chamber natalie chapel nativefier charge nats-server charm nats-streaming-server charm-tools naturaldocs charmcraft nauty chars nave chart-testing navi chcase nb cheapglk nbdime cheat nbimg check nbsdgames check_postgres ncc checkbashisms ncdc checkmake ncdu checkov ncftp checkstyle ncmpc cheops ncmpcpp cherrytree ncnn chezmoi nco chezscheme ncompress chgems ncp chibi-scheme ncrack chicken ncspot chinadns-c ncurses chipmunk ncview chisel ndenv chkrootkit ndiff chmlib ndpi chocolate-doom ne choose neatvi choose-gui nebula choose-rust nedit chordii needle chroma nef chromaprint negfix8 chrome-cli neko chrome-export neo4j chronograf neofetch chrony neomutt chrpath neon chruby neopop-sdl chruby-fish neovide chuck neovim cidr2range neovim-qt cidrmerge neovim-remote cifer nerdctl cig nesc cilium-cli nest cimg nestopia-ue ciphey net-snmp circleci net-tools circumflex netcat citus netcat6 cityhash netcdf civl netdata cjdns nethack cjson ✔ nethacked ckan nethogs cksfv netlify-cli clac netmask clair netpbm clamav netperf clamz netris clang-format nettle ✔ clang-format@11 nettoe clang-format@8 networkit clarinet never clash newlisp classads newman claws-mail newrelic-cli clazy newrelic-infra-agent clblas newsboat clblast newt clean nexus clearlooks-phenix nfcutils clens nfdump clfft nfpm clhep nftables cli11 nghttp2 cli53 nginx clib ngircd click ngrep clickhouse-cpp ngs clickhouse-odbc ngspice cliclick ngt clinfo nickel cling nickle clingo nicotine-plus clip nicovideo-dl clipper nifi clipsafe nifi-registry clisp nift cln nikto cloc nim clockywock ninja clog ninvaders clojure nkf clojure-lsp nload clojurescript nlohmann-json cloog nlopt closure-compiler nmap closure-stylesheets nmh cloud-nuke nmrpflash cloud-watch nng cloudflare-quiche nnn cloudflare-wrangler no-more-secrets cloudflared node cloudformation-cli node-build cloudformation-guard node-sass cloudiscovery node@10 clozure-cl node@12 clp node@14 clpbar node@16 clucene node_exporter clusterctl nodebrew clutter nodeenv clutter-gst nodenv clutter-gtk nomad clzip nomino cmake nopoll cmake-docs norm cmark normalize cmark-gfm notcurses cmatrix noti cmdshelf notifiers cmigemo notmuch cminpack notmuch-mutt cmix noweb cmocka ✔ nox cmockery npth cmockery2 npush cmt nq cmu-pocketsphinx nqp cmu-sphinxbase nrg2iso cmuclmtk nrpe cmus ns-3 cmusfm nsd cnats nsh cntlm nsnake cobalt nspr coccinelle nsq cocoapods nss coconut nsuds cocot ntfs-3g coda-cli ntl code-minimap ntopng code-server ntp codec2 nu codemod nu-smv codequery nuclei codespell nudoku coffeescript nuget cogl num-utils coin3d numactl cointop numcpp coinutils numdiff colfer numpy colima numpy@1.16 collada-dom nushell collectd nut collector-sidecar nutcracker color-code nuttcp colordiff nuvie colormake nuxeo colortail nvc comby nvchecker commandbox nvi commitizen nvm compface nwchem compiledb nxengine composer nyancat conan nylon concurrencykit nyx condure nzbget confd oak configen oakc conftest oath-toolkit confuse oauth2_proxy conjure-up oauth2l conmon obfs4proxy connect objc-codegenutils conserver objc-run console_bridge objfw consul observerward consul-backinator ocaml consul-template ocaml-findlib container-diff ocaml-num container-structure-test ocaml-zarith contentful-cli ocamlbuild convertlit oci-cli convmv ocl-icd convox oclgrind cookiecutter ocp copier ocproxy copilot ocrad coq ocrmypdf corectl octant coredns octave coreos-ct octomap corepack octosql coreutils ode corkscrew odin corral odo corsixth odo-dev cortex odpi cosi odt2txt cosign offlineimap coturn oggz couchdb ogmtools couchdb-lucene oh-my-posh couchpotatoserver oha counterfeiter ohcount coursier ohdear-cli cowsay oil cp2k oksh cpanminus okteto cpansearch ola cpi olsrd cpio omake cpl omega cpm omega-rpg cpmtools omniorb cpp-gsl ompl cpp-httplib ondir cppad one-ml cppcheck onednn cppcms onedpl cppi onedrive cpplint onefetch cppman onetime cppp oniguruma cpprestsdk onioncat cpptest onlykey-agent cpptoml onnxruntime cppunit onscripter cpputest ooniprobe cppzmq opa cpr opam cproto open-adventure cpu_features open-babel cpufetch open-completion cpulimit open-image-denoise cql open-jtalk cql-proxy open-mesh cqlkit open-mpi cquery open-ocd cracklib open-scene-graph crackpkcs open-sp crane open-tyrian crash open-zwave crc32c open62541 crcany openal-soft create-api openalpr create-dmg openapi-generator credstash openblas creduce opencascade crf++ opencbm cri-tools opencc crispy-doom opencl-headers criterion openclonk crm114 opencoarrays croaring opencolorio croc openconnect cromwell opencore-amr ✔ cronolog opencsg crosstool-ng opencv crowdin opencv@2 cruft opencv@3 crun opendbx crunch opendetex crush-tools opendht cryfs openexr ✔ cryptol openexr@2 cryptominisat openfast crystal openfortivpn crystal-icr openfpgaloader crytic-compile openfst cscope openh264 csfml openhmd csmith openimageio csound openiothub-server cspice openj9 css-crush openjazz cssembed openjdk ✔ csshx openjdk@11 cstore_fdw openjdk@17 csview openjdk@8 csvkit openjpeg ✔ csvprintf openkim-models csvq openldap csvtk openliberty-jakartaee8 csvtomd openliberty-jakartaee9 ctags openliberty-microprofile4 ctail openliberty-webprofile8 ctemplate openliberty-webprofile9 ctl openlibm ctlptl openmama ctop openmodelica cuba openmotif cubeb openmsx cubejs-cli openrct2 cubelib openrtsp cucumber-cpp opensaml cucumber-ruby opensc cue opensearch cuetools opensearch-dashboards cunit openshift-cli cups openslide curaengine openslp curl openssh curlftpfs openssl@1.1 ✔ curlie openssl@3 curlpp openstackclient curseofwar opensubdiv cutter opentelemetry-cpp cvs opentracing-cpp cvs-fast-export opentsdb cvsps openttd cvsutils openvdb cvsync openvi cwb3 openvpn cweb operator-sdk cwlogs ophcrack cxgo optipng cxxopts opus ✔ cxxtest opus-tools cypher-shell opusfile cyral-gimme-db-token oq cyrus-sasl or-tools cython oras czg orbit czmq orc daemon orc-tools daemonize orgalorg daemonlogger organize-tool daemontools orientdb dafny ormolu dagger orocos-kdl dante ortp daq ory-hydra dar osc darcs osc-cli darglint oscats dark-mode osi darkhttpd osinfo-db darkice osinfo-db-tools darksky-weather osm darkstat osm-gps-map dart-sdk osm-pbf dartsim osm2pgrouting dasel osm2pgsql dash osmcoastline dashing osmfilter dasht osmium-tool dasm osmosis datafusion ospray datalad osqp datamash osrm-backend datasette osslsigncode datatype99 ossp-uuid datetime-fortran osx-cpu-temp dateutils osxutils datree otf2 dav1d ✔ otf2bdf davix ots davmail ott db-vcs ouch dbacl overdrive dbdeployer overmind dbhash owamp dbmate owfs dbml-cli ox dbus oxipng dbus-glib oysttyer dbxml p0f dc3dd p11-kit ✔ dcadec p7zip dcd pacapt dcfldd pachi dcled packer dcm2niix packer-completion dcmtk packetbeat dcos-cli packetq dcraw packmol ddate packr ddcctl pacman4console ddclient pacmc ddcutil pacparser ddd pacvim ddgr page ddh pagmo ddrescue pakchois deark paket debianutils pam-reattach defaultbrowser pam-u2f deheader pam_yubico dehydrated pandoc deja-gnu pandoc-crossref delta pandoc-include-code delve pandoc-plot demumble pandocomatic deno pango denominator pangomm density pangomm@2.46 dep paperkey dependency-check paps deployer par depqbf par2 derby parallel desk parallel-hashmap desktop-file-utils pari detach pari-elldata detect-secrets pari-galdata detekt pari-galpol detox pari-seadata devd pari-seadata-big devdash parliament device-mapper parquet-cli devil parquet-tools devspace parrot devtodo partio dex pass dex2jar pass-git-helper dfc pass-otp dfix passenger dfmt passpie dfu-programmer passwdqc dfu-util pastebinit dgen pastel dgraph patchelf dhall patchutils dhall-bash pax dhall-json pax-construct dhall-lsp-server pax-runner dhall-yaml payara dhcpdump payload-dumper-go dhcping pazpar2 dhex pbc di pbc-sig dialog pbzip2 diamond pc6001vx diceware pcal dict pcalc diction pcapplusplus dieharder pcb diesel pcb2gcode diff-pdf pce diff-so-fancy pcl diffoscope pcp diffr pcre ✔ diffstat pcre++ difftastic pcre2 ✔ diffutils pcsc-lite digdag pdal digitemp pdf-redact-tools dirac pdf2djvu direnv pdf2htmlex direvent pdf2image dirt pdf2json discount pdf2svg diskonaut pdfcpu disktype pdfcrack diskus pdfgrep dislocker pdfpc distcc pdfsandwich distribution pdftilecut dita-ot pdftk-java ditaa pdftohtml dive pdftoipe django-completion pdm djbdns pdns djhtml pdnsd djl-serving pdnsrec djview4 pdsh djvu2pdf peco djvulibre peg dlib peg-markdown dmagnetic pegtl dmalloc pelikan dmd perceptualdiff dmenu percol dmg2img percona-server dmtx-utils percona-toolkit dns2tcp percona-xtrabackup dnscontrol periscope dnscrypt-proxy perkeep dnscrypt-wrapper perl dnsdist perl-build dnsmap perl@5.18 dnsmasq perltidy dnsperf peru dnsprobe petsc dnstop petsc-complex dnstracer pev dnstwist pex dnsviz pfetch dnsx pg_cron doc8 pg_partman docbook pg_top docbook-xsl pgbadger docbook2x pgbouncer docfx pgcli docker pgdbf docker-buildx pget docker-clean pgformatter docker-completion pgloader docker-compose pgpdump docker-compose-completion pgpool-ii docker-credential-helper pgroonga docker-credential-helper-ecr pgrouting docker-gen pgtoolkit docker-ls pgtune docker-machine pgweb docker-machine-completion pgxnclient docker-machine-driver-hyperkit phive docker-machine-driver-vmware phoon docker-machine-driver-vultr phoronix-test-suite docker-machine-driver-xhyve php docker-machine-nfs php-code-sniffer docker-machine-parallels php-cs-fixer docker-slim php-cs-fixer@2 docker-squash php@7.2 docker-swarm php@7.3 docker2aci php@7.4 dockerize php@8.0 dockutil phpbrew dockviz phplint dockward phpmd doctest phpmyadmin doctl phpstan docui phpunit docutils phrase-cli docuum physfs docx2txt pianobar dog pianod doggo picard-tools doitlive picat dolt pick dooit pickle dopewars picoc dory picocom dos2unix pict dosbox pidcat dosbox-staging pidgin dosbox-x pidof dosfstools pig dotbot pigz dotdrop pike dotenv-linter piknik dotnet pillar double-conversion pillow doublecpp pilosa doubledown pinboard-notes-backup dovecot pinentry doxygen pinentry-mac doxymacs pinfo dpkg pinot dpp pint dprint pioneer dps8m pioneers draco pip-audit drafter pip-completion drake pip-tools driftctl pipe-rename drill pipebench dromeaudio pipemeter drone-cli pipenv dropbear pipes-sh dropbox-uploader pipgrip druid pipx dscanner pit dsda-doom pius dsh pixie dsocks pixiewps dspdfviewer pixman ✔ dsq pixz dssim pjproject dstask pk dsvpn pkcrack dtach pkcs11-helper dtc pkcs11-tools dterm pkg-config ✔ dtm pkg-config-wrapper dtrx pkgconf dua-cli pkgdiff dub pkger duc pktanon duck pla duckdb planck duckscript plank duf plantuml duff platformio duktape platypus dumb plenv dump1090-mutability plod dumpling ploticus dunamai plotutils dune plow dungeon plowshare duo_unix plplot duplicity plustache duply plzip dupseek pmccabe dura pmd dust pmdmini duti pms dvanalyzer pnetcdf dvc png++ dvd+rw-tools png2ico dvd-vr pngcheck dvdauthor pngcrush dvdbackup pngnq dvdrtools pngpaste dvm pngquant dvorak7min pnpm dwarf po4a dwarfutils poac dwatch pocl dwdiff poco dwm pocsuite3 dxflib pod2man dxpy podiff dyld-headers podman dylibbundler podman-compose dynaconf podofo dynamips poetry dynare points2grid dynet pokerstove dynomite polipo e2fsprogs polyglot e2tools polyml earthly polynote easeprobe pony-stable easy-git ponyc easy-rsa ponysay easy-tag poppler easyengine poppler-qt5 easyrpg-player popt ebook-tools portaudio ec2-ami-tools portmidi ec2-api-tools posh ecasound poster eccodes postgis ecflow-ui postgraphile echoprint-codegen postgresql ecl postgresql@10 ecm postgresql@11 ed postgresql@12 editorconfig postgresql@13 editorconfig-checker postgresql@9.4 efl postgresql@9.5 efm-langserver postgresql@9.6 eg postgrest eg-examples potrace eget povray ehco pow eiffelstudio powerline-go eigen powerman eigenpy powerman-dockerize einstein ppl ejabberd pprint ejdb ppss ekg2 ppsspp ekhtml pqiv eksctl pre-commit elan-init precomp elasticsearch predictionio elasticsearch@6 prefixsuffix elb-tools premake elektra prestd eless prestodb eleventy prettier elfutils prettyping elinks primecount elixir primer3 elixir-build primesieve elixir-ls principalmapper elm prips elm-format privoxy elvis procmail elvish procps emacs procs emacs-clang-complete-async proctools emacs-dracula procyon-decompiler embree prodigal embulk profanity emojify proftpd emp progress empty proguard ems-flasher proj emscripten proj@7 enca projectm encfs prometheus enchant prometheus-cpp enet promtail enex2notion proof-general enigma proper enkits proselint enscript proteinortho ensmallen protobuf ent protobuf-c entityx protobuf@3 entr protobuf@3.6 envchain protoc-gen-go envconsul protoc-gen-go-grpc envoy protoc-gen-gogo envoy@1.18 protoc-gen-gogofaster envv protoc-gen-grpc-web enzyme prototool eot-utils prover9 epeg proxychains-ng ephemeralpg proxytunnel epic5 prql-compiler epinio prr epr ps2eps eprover psalm epsilon psc-package epstool psftools epubcheck psgrep eralchemy pspg erlang psql2csv erlang@21 psqlodbc erlang@22 pssh erlang@23 pstoedit erlang@24 pstree erofs-utils psutils esbuild ptex eslint pth esniper ptpython espeak ptunnel esphome publish esptool pueue etcd puf etcd-cpp-apiv3 pugixml ethereum pulledpork etl pulp etsh pulseaudio ettercap pulumi euler-py pumba eureka pup eva pure eventql pure-ftpd evernote-backup purescript evernote2md purescript-language-server evince pushpin ex-vi putmail exa putmail-queue exact-image putty excel-compare puzzles exempi pv exenv pwgen exercism pwnat exif pwncat exiftags pwntools exiftool pwsafe exiftran px exim py-spy exiv2 py2cairo exodriver py3cairo expat pybind11 expect pycodestyle exploitdb pydocstyle ext2fuse pyenv ext4fuse pyenv-ccache extra-cmake-modules pyenv-pip-migrate extract_url pyenv-virtualenv exult pyenv-virtualenvwrapper eye-d3 pyenv-which-ext ezstream pyflow f2 pygitup f3 pygments f3d pygobject3 faac pyinstaller faad2 pyinvoke faas-cli pylint fabio pympress fabric pymupdf fabric-completion pyoxidizer fabric-installer pypy fades pypy3 fail2ban pyqt fairymax pyqt-builder faiss pyqt@5 fakeroot pyright falcon pyside fann pyside@2 fantom python-build fanyi python-launcher fargatecli python-markdown fasd python-tabulate fastbit python-tk@3.10 fastd python-tk@3.9 fastfec python-yq fastjar python@3.10 ✔ fastlane python@3.7 fastme python@3.8 fastmod python@3.9 ✔ fastnetmon pythran fastp pytouhou fastq-tools pyvim fastqc pywhat fasttext q fatsort qalculate-gtk faudio qbe fauna-shell qbs faust qca fava qcachegrind fb-client qcli fb303 qd fbi-servefiles qdae fblog qdbm fbthrift qemu fceux qhull fcgi qjackctl fcgiwrap qjson fcitx-remote-for-osx qmmp fcl qodem fclones qp fcp qpdf fcrackzip qpid-proton fd qpm fdclone qprint fdk-aac qrcp fdk-aac-encoder qrencode fdroidcl qrupdate fdroidserver qscintilla2 fdupes qsoas feedgnuplot qstat feh qsv felinks qt fennel qt-libiodbc feroxbuster qt-mariadb fetch qt-mysql fetch-crl qt-percona-server fetchmail qt-postgresql fex qt-unixodbc ffe qt@5 fff qtads ffind qtfaststart ffmpeg ✔ qthreads ffmpeg2theora qtkeychain ffmpeg@2.8 quantlib ffmpeg@4 quasi88 ffmpegthumbnailer quazip ffms2 questdb ffsend quex fftw quick-lint-js ffuf quickjs fheroes2 quicktype fibjs quill ficy quilt field3d quotatool fifechan quran fig2dev quvi figlet qwt file-formula qwt-qt5 file-roller qxmpp filebeat r fileicon r3 finatra rabbitmq findent rabbitmq-c findomain rack findutils radamsa fio radare2 firebase-cli ragel firefoxpwa rails-completion fish railway fisher rain fits rainbarf fizmo rake-completion fizsh rakudo fizz rakudo-star flac ✔ rancher-cli flac123 rancher-compose flactag rancid flake randomize-lines flake8 range-v3 flamebearer range2cidr flamegraph ranger flank rapidjson flann raptor flarectl rargs flash rarian flashrom rasqal flatbuffers ratfor flatcc rats flawfinder rav1e ✔ fleet-cli rawgl fleetctl raxml-ng flex raylib flickcurl rbenv flif rbenv-aliases flint rbenv-binstubs flint-checker rbenv-bundle-exec flintrock rbenv-bundler flit rbenv-bundler-ruby-version flix rbenv-chefdk flock rbenv-communal-gems flow rbenv-ctags flow-cli rbenv-default-gems flow-tools rbenv-gemset flowgrind rbenv-vars fltk rbspy fluent-bit rbtools fluid-synth rbw fluid-synth@2.1 rc flume rclone flux rcm fluxctl rcs flvmeta rdate flvstreamer rdb flyctl rdesktop flyway rdfind fmdiff rdiff-backup fmpp rdkit fmt rds-command-line-tools fn rdup fnlfmt re-flex fnm re2 fnt re2c fobis react-native-cli folderify readline ✔ folly readosm foma reattach-to-user-namespace fon-flash-cli reaver font-util rebar fontconfig ✔ rebar3 fontforge recode fonttools recon-ng fop recoverjpeg forcecli recutils ford red-tldr forego redex foreman redir foremost redis forge redis-leveldb fork-cleaner redis@3.2 format-udf redis@4.0 fortio redis@6.2 fortran-language-server redland fortune redo fossil redpen fourmolu redshift fourstore redstore fox reg fpart regex-opt fpc regina-rexx fpdns regipy fping regldg fplll regula fpp release-it fprettify rem fprobe remake fq remarshal fragroute remctl freealut remind freebayes reminiscence freeciv ren freediameter rename freedink renameutils freeglut reop freeimage reorder-python-imports freeipmi repl freeling repo freeradius-server reposurgeon freerdp reprepro freeswitch reproc freetds req freetype ✔ reshape freexl rest-shell frege restic frege-repl restund frei0r ✔ restview fribidi ✔ resty frobtads rethinkdb frotz revive frpc rex frps rfcmarkup frugal rfcstrip fruit rgbds frum rgf fs-uae rgxg fselect rhash fsevent_watch rhino fsevents-tools rhit fsh rich-cli fsql riemann fst riemann-client fstrm riff fsw rig fswatch rinetd ftgl ringojs ftjam ripgrep fuego ripgrep-all func-e ripmime funcoeszz ripsecrets functionalplus rizin fuse-emulator rke fuse-overlayfs rkflashtool fuse-zip rkhunter fuseki rlog futhark rlwrap fuzzy-find rm-improved fwknop rmate fwup rmcast fx rmlint fypp rmw fzf rnv fzy roapi g2 robodoc g2o robot-framework g3log robotfindskitten gabedit rocksdb gaffitter rofs-filtered galen rogue gallery-dl roll gambit rolldice gambit-scheme rollup game-music-emu rom-tools gammaray ronn gammu root gandi.cli rosa-cli ganglia rospo garmintools roswell gateway-go roundup gatsby-cli rover gau rp gauche rpcgen gauge rpg gaul rpg-cli gawk rpki-client gaze rpl gbdfed rpm gcab rpm2cpio gcal rqlite gcalcli rrdtool gcc rsc_2fa gcc@10 rslint gcc@11 rsnapshot gcc@4.9 rssh gcc@5 rsstail gcc@6 rst-lint gcc@7 rswift gcc@8 rsync gcc@9 rsync-time-backup gcem rsyslog gcovr rtags gcsfuse rtaudio gcutil rtf2latex2e gcviewer rtl_433 gd rtmidi gdal rtmpdump gdb rtorrent gdbgui rtptools gdbm ✔ rttr gdcm rtv gdk-pixbuf rubberband ✔ gdl ruby gdm ruby-build gdmap ruby-completion gdrive ruby-install gdu ruby@2.4 gdub ruby@2.5 gearman ruby@2.6 geckodriver ruby@2.7 gecode ruby@3.0 gedit rubyfmt geeqie run gegl runcocoa gel rune gem-completion runit gemgen rure genact rush genders rush-parallel generate-json-schema rust genext2fs rust-analyzer gengetopt rustc-completion genometools rustfmt genstats rustscan geocode-glib rustup-init geogram rxvt-unicode geographiclib ry geoip rzip geoipupdate s-lang geomview s-nail geos s-search geoserver s2geometry geph2 s2n geph4 s3-backer gerbil-scheme s3cmd gerbv s3fs gerrit-tools s3ql get-flash-videos s4cmd get_iplayer s6 getdns safe-rm getmail sagittarius-scheme gettext ✔ sail getxbook saldl gexiv2 salt gflags salt-lint gforth saltwater gh samba ghc saml2aws ghc@8.6 sampler ghc@8.8 samtools ghc@9 samurai ghcup sane-backends ghex sassc ghi savana ghorg saxon ghostscript saxon-b ghostunnel sbcl ghq sbjson ghr sblim-sfcc ghz sbt ghz-web sbt@0.13 gi-docgen sbtenv gibbslda sbuild gibo sc-im gif2png sc68 gifcap scala gifify scala@2.11 giflib ✔ scala@2.12 giflossy scalaenv gifsicle scalapack gifski scalariform gimme scalastyle gimme-aws-creds scale2x ginac scalingo gist scamper gistit scc git ✔ sccache git-absorb scdoc git-annex sceptre git-annex-remote-rclone schema-evolution-manager git-appraise scheme48 git-archive-all schroedinger git-branchless scipy git-bug scm-manager git-cal scmpuff git-cinnabar scons git-cliff scorecard git-codereview scotch git-cola scour git-credential-libsecret scrcpy git-credential-manager screen git-crypt screenfetch git-delete-merged-branches screenresolution git-delta scriptcs git-extras scrollkeeper git-filter-repo scrub git-fixup scry git-flow scrypt git-flow-avh scs git-fresh scummvm git-ftp scummvm-tools git-game scw git-gerrit scws git-gui sd git-hooks-go sdb git-hound sdcc git-if sdcv git-imerge sdedit git-integration sdf git-interactive-rebase-tool sdl git-lfs sdl12-compat git-multipush sdl2 ✔ git-now sdl2_gfx git-number sdl2_image git-octopus sdl2_mixer git-open sdl2_net git-plus sdl2_sound git-quick-stats sdl2_ttf git-recent sdl_gfx git-remote-codecommit sdl_image git-remote-gcrypt sdl_mixer git-remote-hg sdl_net git-review sdl_rtf git-revise sdl_sound git-secret sdl_ttf git-secrets sdlpop git-series sdns git-sizer seal git-ssh search-that-hash git-standup seaweedfs git-subrepo sec git-svn securefs git-svn-abandon seexpr git-sync selecta git-test selene git-tf selenium-server git-town semgrep git-tracker semtag git-trim sendemail git-url-sub sentencepiece git-utils seqkit git-vendor seqtk git-when-merged ser2net git-workspace serd git-xargs serf gitbackup serialosc gitbatch sersniff gitbucket serve gitfs serveit gitg serverless github-keygen servus github-markdown-toc setweblocthumb github-release sevenzip gitlab-ci-local sextractor gitlab-gem sf-pwgen gitlab-runner sfcgal gitleaks sfk gitless sfml gitlint sfst gitmoji sftpgo gitql sgn gitslave sgr gitter-cli sgrep gitui sha1dc gitup sha2 gitversion sha3sum gitwatch shadowenv giza shadowsocks-libev gjs shadowsocks-rust gkrellm shairport gl2ps shairport-sync glab shakespeare glade shallow-backup glances shapelib glassfish shared-mime-info glbinding shc gleam sheldon glew shellcheck glfw shellharden glib ✔ shellinabox glib-networking shellshare glib-openssl shelltestrunner glibc shellz glibc@2.13 shfmt glibmm shibboleth-sp glibmm@2.66 ship glide shivavg glider shmcat glkterm shml glktermw shmux glm shntool global shogun globe showkey globjects shpotify glog shtool glooctl shtools gloox shunit2 glow shyaml glpk sic glslang sickle glslviewer siege glui sift glulxe signal-cli gluon signify-osx glyr sigrok-cli gmail-backup sile gmailctl silicon gmic silk gmime simde gmp ✔ simdjson gmsh simg2img gmt simgrid gmt@5 simh gnirehtet simple-amqp-client gnome-autoar simple-mtpfs gnome-common simple-obfs gnome-latex simple-scan gnome-recipes simple-tiles gnome-themes-standard simutrans gnu-apl since gnu-barcode singular gnu-chess singularity gnu-cobol sip gnu-complexity sipcalc gnu-getopt sipp gnu-go sipsak gnu-indent siril gnu-prolog sisc-scheme gnu-sed sispmctl gnu-shogi six gnu-smalltalk sjk gnu-tar sk gnu-time skaffold gnu-typist skafos gnu-units ski gnu-which skinny gnumeric skktools gnunet skopeo gnupg skylighting gnupg-pkcs11-scd skymaker gnupg@1.4 sl gnupg@2.2 slackcat gnuplot slacknimate gnuplot@4 slashem gnuradio sleef gnuski sleepwatcher gnustep-base sleuthkit gnustep-make slides gnutls ✔ slimerjs go slirp4netns go-bindata slither-analyzer go-boring sloc go-critic sloccount go-jira slowhttptest go-jsonnet slrn go-md2man slugify go-statik slurm go@1.13 smake go@1.14 smali go@1.15 smap go@1.16 smartmontools go@1.17 smartypants go@1.18 smimesign goaccess smlpkg goad smpeg goawk smpeg2 gobject-introspection ✔ smu gobo smug gobuster sn0int gocloc snag gocr snakemake gocryptfs snap goctl snap-telemetry goenv snap7 gofabric8 snapcast goffice snapcraft gofish snappy ✔ gofumpt snappystream gojq snapraid gokart sng golang-migrate sngrep golangci-lint sniffer gold sniffglue gollum snobol4 golo snort gom snow gomodifytags snowflake gomplate snownews goocanvas snowpack goofys sntop google-authenticator-libpam snzip google-benchmark so google-java-format soapyrtlsdr google-sparsehash soapysdr google-sql-tool socat googler soci googletest sofia-sip goolabs softhsm goose solana gopass solargraph gopass-jsonapi solarus gopls solc-select goplus solid goproxy solidity gops sollya gor solr goredo solr@7.7 goreleaser somagic goreman somagic-tools gosec sonar-completion gost sonar-scanner gostatic sonarqube gosu sonarqube-lts gotags sonic gotests sonobuoy gotify sophus goto sops gotop sord gource sound-touch govc source-highlight govendor source-to-image gowsdl sourcedocs gox sourcekitten gpa sourcery gpac sox gpatch spaceinvaders-go gpcslots2 spaceman-diff gperf spaceship gperftools spack gpg-tui spades gpgme spago gphoto2 spandsp gping spark gplcver sparkey gpm sparse gpp spatialindex gpredict spatialite-gui gprof2dot spatialite-tools gpsbabel spawn-fcgi gpsd spdlog gpsim spdx-sbom-generator gptfdisk spdylay gptsync spectra gputils speech-tools gpx speedread gqlplus speedtest-cli gqview speex ✔ grace speexdsp gradio sphinx gradle sphinx-doc gradle-completion spice-gtk gradle-profiler spice-protocol gradle@6 spidermonkey grafana spidermonkey@78 grafana-agent spigot grails spim grap spin graph-tool spiped graphene spirv-cross graphicsmagick spirv-headers graphite2 ✔ spirv-llvm-translator graphql-cli spirv-tools graphqurl splint graphviz sponge gravity spoof-mac grc spot greed spotbugs grep spotify-tui grepcidr spotifyd grepip spr grex spring-completion grin spring-loaded grin-wallet spring-roo grip sproxy groestlcoin sql-lint groff sql-translator grok sqlancer grokj2k sqlbench grokmirror sqlc gromacs sqlcipher gron sqldiff groonga sqlfluff groovy sqlite ✔ groovysdk sqlite-analyzer groovyserv sqlite-utils grpc sqliteodbc grpc-swift sqlmap grpcui sqlparse grpcurl sqls grsync sqlx-cli grt sqoop grunt-cli sqsmover grunt-completion sqtop gsar squashfs gsasl squashfuse gsettings-desktop-schemas squid gsl squirrel gsmartcontrol sratom gsoap sratoolkit gspell src gssdp srecord gssh srt ✔ gst-devtools srtp gst-editing-services ssdb gst-libav ssdeep gst-plugins-bad sse2neon gst-plugins-base ssed gst-plugins-good ssh-audit gst-plugins-rs ssh-copy-id gst-plugins-ugly ssh-permit-a38 gst-python ssh-vault gst-rtsp-server sshfs gstreamer sshguard gti sshs gtk+ sshtrix gtk+3 sshuttle gtk-chtheme ssldump gtk-doc sslh gtk-gnutella ssllabs-scan gtk-mac-integration sslmate gtk-vnc sslscan gtk4 sslsplit gtkdatabox sslyze gtkextra ssss gtkglext sstp-client gtkmm st gtkmm3 stanc3 gtkmm4 standardese gtksourceview stanford-corenlp gtksourceview3 stanford-ner gtksourceview4 stanford-parser gtksourceview5 star gtksourceviewmm starship gtksourceviewmm3 startup-notification gtkspell3 staticcheck gtmess statik gtop statix gtranslator stdman gts stella gucharmap stellar-core guetzli stencil guichan step guile ✔ stern guile@2 stgit gulp-cli stk gum stlink gumbo-parser stm32flash gupnp stockfish gupnp-av stoken gupnp-tools stolon gvp stone gwenhywfar stone-soup gws storj-uplink gwt storm gwyddion stormlib gx stormssh gx-go stormssh-completion gxml stout gzip stow gzrt stp h2 strace h264bitstream streamlink h2c streamripper h2o stress h2spec stress-ng h3 strongswan hackrf structurizr-cli hadolint stubby hadoop stunnel halibut stuntman halide style-check hamlib stylish-haskell handbrake stylua hapi-fhir-cli sub2srt haproxy subfinder harbour subliminal hardlink subnetcalc harfbuzz ✔ subversion haruhi-dl subversion@1.8 hashcash suil hashcat suite-sparse hashlink sundials hashpump superlu haskell-language-server supermodel haskell-stack supertux haste-client supervisor hasura-cli surfraw hatari suricata hatch svg2pdf haxe svg2png hayai svgbob hbase svgcleaner hblock svgo hcl2json svt-av1 hcloud svtplay-dl hcxtools swagger-codegen hdf5 swagger-codegen@2 hdf5-mpi swagger2markup-cli hdf5@1.10 swaks hdf5@1.8 swfmill hdt swftools healpix swi-prolog heartbeat swift heatshrink swift-format hebcal swift-protobuf heimdal swift-sh heksa swiftdraw helib swiftformat helix swiftgen hello swiftlint helm swiftplantuml helm@2 swig helmfile swig@3 helmify swimat helmsman switch-lan-play help2man switchaudio-osx heppdt2 sword hercules swtpm herrie sxiv hesiod syck hevea sylpheed hexcurse symengine hexedit sync_gateway hexgui syncthing hexo synergy-core hexyl synfig hey synscan hfstospell syntaxerl hfsutils sysbench hg-fast-export sysdig hicolor-icon-theme sysstat hidapi systemc highlight systemd highs sz81 hilite t-completion himalaya t-rec hiredis t1lib historian t1utils hive ta-lib hivemind tag hledger taglib hlint tagref hmmer tailor hoedown tailscale homeassistant-cli takt homebank taktuk homeshick tal homesick-completion talisman homeworlds talloc honcho tanka hopenpgp-tools tarantool hostdb tarlz hostess tarsnap howard-hinnant-date tarsnap-gui howdoi tarsnapper hpack task hping task-spooler hqx taskd hr taskell hsd tasksh hspell taskwarrior-tui hss tass64 hstr tbb ht tbb@2020 html-xml-utils tbox html2text tcc htmlcleaner tccutil htmlcompressor tcl-tk htmlcxx tclap htmldoc tcpdump htmlq tcpflow htmltest tcping htop tcpkali htpdate tcpreplay htslib tcpsplit http-parser tcpstat http-prompt tcptrace http-server tcptraceroute http_load tcptunnel httpd tcsh httpdiff tctl httperf td httpflow tdkjs httpie tdlib httping tea httpry tealdeer httpstat teapot httpx tectonic httpyac tee-clc httrack teem hub teensy_loader_cli hubble tektoncd-cli hubflow teku huexpress teleconsole hugo telegraf hunspell telegram-cli hurl teleport hut teller hwatch telnet hwloc telnetd hy template-glib hydra temporal_tables hyperestraier tendermint hyperfine tengo hyperkit tenyr hyperscan tepl hyperspec tere hypre term hyx termbox i2c-tools termcolor i2p terminal-notifier i2pd terminalimageviewer i2util terminator i386-elf-gdb termius i686-elf-binutils termrec i686-elf-gcc termshare iam-policy-json-to-terraform termshark iamy termtosvg iat terracognita ibex terraform iblinter terraform-docs ical-buddy terraform-inventory icarus-verilog terraform-ls icbirc terraform-lsp icdiff terraform-provider-libvirt ice terraform-rover icecast terraform@0.11 icecream terraform@0.12 icemon terraform@0.13 icon terraform_landscape icon-naming-utils terraformer iconsur terraforming icoutils terragrunt icu4c ✔ terrahelp id3ed terrahub id3lib terramate id3tool terrascan id3v2 tesseract ✔ ideviceinstaller tesseract-lang idnits testdisk idris testkube idris2 testssl idutils texapp ievms texi2html ifacemaker texinfo ifstat texlab iftop texlive ifuse texmath igraph textidote igv textql ii tfenv ijq tfk8s ike-scan tflint ilmbase tfmigrate imagejs tfproviderlint imagemagick tfschema imagemagick@6 tfsec imageoptim-cli tfupdate imagesnap tgenv imageworsener tgif imake tgui imap-backup thanos imap-uw the_platinum_searcher imapfilter the_silver_searcher imapsync thefuck imath ✔ theharvester imessage-ruby theora ✔ imgproxy thors-serializer imgur-screenshot thrax imlib2 threadweaver immortal threemux immudb thrift imposm3 thrift@0.9 inadyn thrulay include-what-you-use tidy-html5 indicators tidy-viewer inetutils tidyp infer tiff2png influxdb tig influxdb-cli tiger-vnc influxdb@1 tika inform6 tile38 infracost tilt infrakit timedog inframap timelimit inih timewarrior iniparser timg inja timidity inko tin inlets tinc innoextract tintin innotop tiny-fugue inotify-tools tinycdb insect tinyproxy inspectrum tinysearch inspircd tinysvm install-peerdeps tinyxml instalooter tinyxml2 instead tio intercal tippecanoe interface99 titan-server internetarchive titlecase intltool tivodecode inxi tkdiff io tldr ioctl tlsx iodine tlx ioke tm ioping tmate ios-class-guard tmpreaper ios-deploy tmpwatch ios-sim tmux ios-webkit-debug-proxy tmux-mem-cpu-load iozone tmux-xpanes ip_relay tmuxinator ipbt tmuxinator-completion ipcalc tmuxp iperf tmx iperf3 tnef ipfs tnftp iphotoexport tnftpd ipinfo toast ipinfo-cli todo-txt ipmitool todoman ipmiutil tofrodos ipopt toilet iprint tokei iproute2 tokyo-cabinet iproute2mac tokyo-dystopia ipsumdump tomcat iptables tomcat-native iputils tomcat@7 ipv6calc tomcat@8 ipv6toolkit tomcat@9 ipython tomee-plume ircd-hybrid tomee-plus ircd-irc2 tomee-webprofile ircii toml11 ired toot iredis topgit ironcli topgrade irrlicht tor irrtoolset torchvision irssi torsocks isa-l tox isc-dhcp toxcore isl tpl isl@0.18 tpp iso-codes trace2html isort tracebox ispc tracker ispell tractorgen istioctl tradcpp isync trader itex2mml traefik itk traefik@1 itpp trafficserver itstool trafshow ivtools traildb ivy trailscraper ivykis transcrypt jabba translate-shell jack translate-toolkit jackett transmission-cli jadx trash jags trash-cli jailkit travis jam tre janet tre-command jansson trec_eval jaq tree jasmin tree-sitter jasper treecc java-service-wrapper treefmt javacc treefrog javarepl tremor-runtime jbake trezor-agent jbig2dec triangle jbig2enc trimage jbigkit trino jboss-forge triton jc trivy jcal trojan-go jd truecrack jdnssec-tools truffle jdtls truncate jdupes trunk jed trzsz jello trzsz-go jellyfish tsduck jemalloc tssh jena tsung jenkins tta jenkins-job-builder ttdl jenkins-lts ttf2eot jenv ttf2pt1 jerm ttfautohint jerryscript tth jetty ttmath jetty-runner tty-clock jflex tty-share jfrog-cli tty-solitaire jhead ttyd jhiccup ttygif jhipster ttyplot jid ttyrec jigdo tuc jimtcl tundra jing-trang tunnel jinja2-cli tuntox jinx tup jless tvnamer jlog twarc jmeter tweak jmxterm twemcache jmxtrans twine-pypi jnethack two-lame jnettop twoping jo twtxt jobber twty joe txr john txt2tags john-jumbo tygo jolie typedb jooby-bootstrap typescript joplin-cli typespeed jose tz joshua u-boot-tools jove uade jp ubertooth jp2a ucg jpdfbookmarks uchardet jpeg ✔ ucl jpeg-archive ucloud jpeg-turbo ✔ ucommon jpeg-xl ✔ ucon64 jpeginfo ucspi-tcp jpegoptim udis86 jpegrescan udptunnel jq udpxy jql udunits jrnl ufraw jrsonnet uftp jrtplib uftrace jruby uggconv jsawk ugit jsdoc3 ugrep jshon uhd jslint4java ultralist jsmin um json-c umlet json-fortran umple json-glib unac json-table unar json11 unarj json5 unbound ✔ json_spirit uncrustify jsoncpp ungit jsonlint uni jsonnet uni2ascii jsonnet-bundler unibilium jsonpp unicorn jsonrpc-glib unifdef jsonschema unison jsonschema2pojo unisonlang jsvc unittest jthread unittest-cpp juise uniutils juju universal-ctags juju-wait unixodbc julia unnethack juliaup unoconv julius unp juman unpaper jumanpp unrtf jump unshield jupp unum jupyterlab unyaffs just unzip jvgrep up jvm-mon upscaledb jvmtop uptimed jxrlib uptoc jython upx k2tf urdfdom k3d urdfdom_headers k3sup urh k6 uriparser k9s urlview kafka urlwatch kahip uru kaitai-struct-compiler urweb kakoune usb.ids kalker usbredir kallisto usbutils kamel userspace-rcu kanif utf8cpp kapacitor utf8proc karchive uthash karn util-linux katago util-macros kawa utimer kcat uudeview kcgi uutils-coreutils kcov uutils-findutils kcptun uuu kdoctools uwsgi kdoctor v kedge v2ray keepassc v2ray-plugin keepkey-agent v8 keptn v8@3.15 kepubify vagrant-completion kerl vala kertish-dfs vala-language-server kestrel valabind kettle vale keychain valgrind keydb vamp-plugin-sdk keystone vapor khal vapoursynth khard vapoursynth-imwri khiva vapoursynth-ocr ki vapoursynth-sub ki18n varnish kibana vassh kibana@6 vault kickstart vault-cli kics vaulted killswitch vbindiff kim-api vc kimwitu++ vc4asm kind vcdimager kitchen-completion vcftools kitchen-sync vcluster kite vcpkg klavaro vcprompt klee vcs kmod vcsh kn vde knock vdirsyncer knot veclibfort knot-resolver vectorscan known_hosts vecx ko vegeta koka velero kommit vera++ kompose verapdf kona vercel-cli kondo verilator kopia vermin kops vert kore vert.x kotlin vespa-cli kotlin-language-server vf kpcli vfuse kqwait vgmstream krakend vgrep krb5 vice krew viddy ksh viennacl ksh93 viewvc kstart vifm ksync vile kt-connect vilistextum ktlint vim ktmpl vimpager ktoblzcheck vimpc kube-aws vint kube-linter vip kube-ps1 vips kube-score virgil kubeaudit virt-manager kubebuilder virtualenv kubecfg virtualenvwrapper kubecm virtualhost.sh kubeconform virtualpg kubectx virtuoso kubekey virustotal-cli kubeless vis kubeprod visionmedia-watch kubergrunt visitors kubernetes-cli visp kubernetes-cli@1.22 vit kubernetes-service-catalog-client vite kubescape vitess kubeseal vitetris kubespy viu kubeval vivid kubevela vkectl kubie vlang kumactl vlmcsd kumo vmdktool kustomize vmtouch kvazaar vncsnapshot kyma-cli vnstat kyoto-cabinet vnu kyoto-tycoon volatility kytea voldemort kyua volk kyverno volt lab volta lablgtk vorbis-tools ladspa-sdk vorbisgain lame ✔ voro++ lammps vowpal-wabbit landscaper vpcs languagetool vpn-slice lanraragi vramsteg lapack vroom lasi vrpn lasso vsce lastpass-cli vsearch lastz vsftpd laszip vsh latex2html vstr latex2rtf vsts-cli latexdiff vtable-dumper latexindent vtclock latexml vte3 latino vtk launch vtk@8.2 launch4j vttest launch_socket_server vue-cli launchctl-completion vulkan-headers launchdns vulkan-loader lazydocker vultr lazygit vulture lbdb w-calc lbzip2 w3m lc0 wabt lcdf-typetools waffle lcdproc wagyu lci wait_on lcm wakatime-cli lcov wakeonlan lcrack wal2json lcs walkmod ld-find-code-refs wallpaper ldapvi wandio ldc wangle ldid waon ldns wapm ldpl wartremover le wasm-pack leaf wasm-tools leaf-proxy wasm3 leakcanary-shark wasmer lean wasmtime lean-cli watch leapp-cli watch-sim leaps watchexec ledger watchman ledit watson leela-zero wavpack lefthook wayland legit wayland-protocols lego waypoint leiningen wb32-dfu-updater_cli lemon wbox lensfun wcslib lepton wdc leptonica ✔ wdfs lerna wdiff less weaver lesspipe web100clt lesstif webalizer levant webarchiver leveldb webdis lexbor webfs lexicon webhook lf webify lfe webkit2png lft webkitgtk lftp webp ✔ lgeneral webp-pixbuf-loader lgogdownloader webpack lha websocat lhasa websocketd lib3ds websocketpp libaacs webtorrent-cli libabw weechat libadwaita weggli libaec wego libagg weighttp libaio wellington libantlr3c wemux libao werf libapplewm west libarchive ✔ wgcf libart wget libass ✔ wgetpaste libassuan whalebrew libatomic_ops whatmask libav whatmp3 libavif when libb2 ✔ whistle libb64 whois libbdplus widelands libbi wifi-password libbinio wiggle libbitcoin wiiuse libbitcoin-blockchain wiki libbitcoin-client wildfly-as libbitcoin-consensus wildmidi libbitcoin-database willgit libbitcoin-explorer wimlib libbitcoin-network winetricks libbitcoin-node winexe libbitcoin-protocol wiredtiger libbitcoin-server wireguard-go libbladerf wireguard-tools libbluray ✔ wiremock-standalone libbpf wireshark libbpg wirouter_keyrec libbs2b with-readline libbsd wla-dx libbtbb wllvm libcaca wmctrl libcanberra woff2 libcap wolfmqtt libcap-ng wolfssl libcapn woob libcbor woof libccd wordgrinder libcddb wordle libcdio wordnet libcdr wordplay libcds wownero libcec wp-cli libcello wp-cli-completion libcerf wput libchamplain wrangler libchaos wren libchewing wren-cli libcmph write-good libcoap writerperfect libconfig wrk libcouchbase wrk-trello libcouchbase@2 wsk libcpuid wskdeploy libcroco wslay libcsv wtf libcue wtfutil libcuefile wumpus libcython wv libdaemon wv2 libdap wwwoffle libdazzle wxmaxima libdbi wxpython libdc1394 wxwidgets libdca wxwidgets@3.0 libde265 wy60 libdeflate x11vnc libdill x264 ✔ libdiscid x265 ✔ libdivecomputer x3270 libdmtx x86_64-elf-binutils libdmx x86_64-elf-gcc libdnet x86_64-elf-gdb libdrawtext x86_64-linux-gnu-binutils libdrm xa libdshconfig xalan-c libdsk xapian libdv xaric libdvbpsi xauth libdvdcss xbee-comm libdvdnav xbitmaps libdvdread xboard libeatmydata xcb-proto libebml xcb-util libebur128 xcb-util-cursor libedit xcb-util-image libelf xcb-util-keysyms libepoxy xcb-util-renderutil libestr xcb-util-wm libetonyek xcbeautify libetpan xcenv libev xcinfo libevent ✔ xclip libevhtp xclogparser libewf xcode-kotlin libexif xcodegen libexosip xcproj libextractor xcprojectlint libfabric xctool libfaketime xcv libffcall xdelta libffi ✔ xdg-ninja libfido2 xdot libfishsound xdotool libfixbuf xdpyinfo libfixposix xerces-c libflowmanager xfig libfontenc xgboost libforensic1394 xh libfreefare xhyve libfreehand xidel libfreenect xinput libfs xkbcomp libftdi xkcd libftdi0 xkeyboardconfig libfuse xlearn libfuse@2 xlispstat libgadu xlslib libgaiagraphics xmake libgccjit xml-coreutils libgcrypt xml-security-c libgda xml-tooling-c libgdata xml2 libgee xmlcatmgr libgeotiff xmlformat libgetdata xmlrpc-c libgfshare xmlsectool libghthash xmlsh libgig xmlstarlet libgit2 xmlto libgit2-glib xmltoman libglade xmount libglademm xmp libgnomecanvas xmrig libgnomecanvasmm xonsh libgnt xorgproto ✔ libgosu xorgrgb libgpg-error xorriso libgphoto2 xpa libgr xpdf libgrape-lite xpipe libgraphqlparser xplanet libgsf xplr libgsm xqilla libgtop xray libgusb xrick libgweather xrootd libgxps xsane libhandy xsd libharu xsel libhdhomerun xshogi libheif xsimd libhid xsv libhttpserver xsw libhttpseverywhere xtensor libical xterm libice xtitle libicns xtrans libiconv xvid ✔ libid3tag xxh libident xxhash libidl xz ✔ libidn yacas libidn2 ✔ yadm libilbc yaegi libimagequant yaf libimobiledevice yafc libiodbc yajl libiptcdata yamale libirecovery yamcha libiscsi yamdi libjson-rpc-cpp yaml-cpp libjwt yaml-language-server libkate yamllint libkeccak yank libkml yapf libksba yara liblas yarn liblcf yarn-completion liblinear yash liblo yasm liblockfile yaws liblouis yaz liblqr yaze-ag libltc yazpp liblunar yconalyzer liblwgeom ydcv liblzf ydiff libmaa yelp-tools libmagic yeti libmarpa yetris libmatio yh libmatroska yj libmaxminddb ykclient libmd ykdl libmemcached ykman libmetalink ykneomgr libmicrohttpd ykpers libmikmod yle-dl libming yorkie libmms yosys libmng you-get libmnl youtube-dl ✔ libmobi youtube-dlc libmodbus youtubedr libmodplug youtubeuploader libmonome yq libmowgli yt-dlp libmp3splt yubico-piv-tool libmpc yubikey-agent libmpd yuicompressor libmpdclient yydecode libmpeg2 z libmrss z.lua libmspub z3 libmtp z80asm libmusicbrainz z80dasm libmwaw zabbix libmxml zabbix-cli libmypaint zanata-client libnatpmp zbackup libnet zbar libnetfilter-queue zbctl libnetfilter_conntrack zboy libnetworkit zebra libnfc zeek libnfnetlink zelda-roth-se libnfs zellij libnftnl zenith libnghttp2 ✔ zenity libngspice zero-install libnice zeromq ✔ libnids zet libnl zig libnotify zile libnova zim libnsl zimg ✔ libntlm zinc libnxml zinit liboauth zint libobjc2 zip libodfgen zita-convolver libofx zk libogg ✔ zlib liboil zlib-ng libolm zlog libomp zmap libopenmpt zmqpp libopennet zmwangx/npm-noob/noob ✔ liboping znapzend libopusenc znc liboqs zola libosinfo zookeeper libosip zopfli libosmium zorba libotr zork libowfat zoro libp11 zoxide libpagemaker zpaq libpano zplug libpcap zrepl libpciaccess zsdx libpcl zsh libpeas zsh-async libpgm zsh-autosuggestions libphonenumber zsh-completions libpinyin zsh-fast-syntax-highlighting libpipeline zsh-git-prompt libplctag zsh-history-substring-search libplist zsh-lovers libpng ✔ zsh-navigation-tools libpointing zsh-syntax-highlighting libpoker-eval zsh-vi-mode libpq zsh-you-should-use libpqxx zshdb libpqxx@6 zssh libprelude zstd ✔ libprotoident zsxd libproxy zsync libpsl zurl libpst zx libpthread-stubs ✔ zxcc libpulsar zydis libpython-tabulate zyre libqalculate zzuf libquantum zzz To install one of them, run (for example): brew install a2ps ==&gt; Searching for a previously deleted formula (in the last month)... Error: No previously deleted formula found. ==&gt; Searching taps on GitHub... Error: No formulae found in taps. ==&gt; Formulae aom libbluray opencore-amr bdw-gc libevent openexr brotli libffi openjdk ca-certificates libidn2 openjpeg cairo libnghttp2 openssl@1.1 cjson libogg opus cmocka libpng p11-kit dav1d libpthread-stubs pcre ffmpeg librist pcre2 flac libsamplerate pixman fontconfig libsndfile pkg-config freetype libsodium python@3.10 frei0r libsoxr python@3.9 fribidi libtasn1 rav1e gdbm libtiff readline gettext libtool rubberband giflib libunistring sdl2 git libvidstab snappy glib libvmaf speex gmp libvorbis sqlite gnutls libvpx srt gobject-introspection libx11 tesseract graphite2 libxau theora guile libxcb unbound harfbuzz libxdmcp webp icu4c libxext x264 imath libxrender x265 jpeg little-cms2 xorgproto jpeg-turbo lz4 xvid jpeg-xl lzo xz lame m4 youtube-dl leptonica mbedtls zeromq libarchive mpdecimal zimg libass nettle zstd libb2 noob Already up-to-date. Error: Cannot install under Rosetta 2 in ARM default prefix (/opt/homebrew)! To rerun under ARM use: arch -arm64 brew install ... To install under x86_64, install Homebrew into /usr/local. Warning: git 2.37.2 is already installed and up-to-date. To reinstall 2.37.2, run: brew reinstall git Warning: python@3.10 3.10.6_1 is already installed and up-to-date. To reinstall 3.10.6_1, run: brew reinstall python@3.10 Python 3.9.12 openjdk is already installed but outdated (so it will be upgraded). Error: Cannot install under Rosetta 2 in ARM default prefix (/opt/homebrew)! To rerun under ARM use: arch -arm64 brew install ... To install under x86_64, install Homebrew into /usr/local. . . echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSP # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... making directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /Users/gianninaortegarico/vscode exists. Directory /Users/gianninaortegarico/vscode/APCSP exists. . test=“python3” # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo “$check” else # less than zero echo “$check” fi . “�� .",
            "url": "https://lovemydogs.github.io/Timeline/bash/2022/08/25/Using-Python-Shells.html",
            "relUrl": "/bash/2022/08/25/Using-Python-Shells.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Markdowning It Up",
            "content": "Lets do this . Markdown Time . Let’s try out lists | And their possibilities | Such as separated things that could be one line | . Or, instead just type it out in one line like a normal person1. Bold a word, and we’re displaying our skills. Very minute skills. . Let’s try out other things . lets be codey . or a bit to the side . really thick now . “Quoting out my life” . Foods I Like Foods I Dislike . Apples | Avocados | . Broccoli | Tomatoes | . Meat | I dunno | . . Making a footnote ‘cause I can, mimicking things &#8617; . |",
            "url": "https://lovemydogs.github.io/Timeline/markdown/2022/08/21/markdowning.html",
            "relUrl": "/markdown/2022/08/21/markdowning.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Javascript Use",
            "content": "var mep = &quot;derpin around&quot;; console.log(mep) function logItType(output) { //putting logItType as an example of a function console.log(typeof output, &quot;;&quot;, output); } p = 1; //attempted to use dates, failed // define a function to hold data for a Person function Mess(size, disgust, madeBy) { this.size = size; this.disgust = disgust; this.madeBy = madeBy; this.role = &quot;&quot;; } // define a setter for role in Person data Mess.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Mess.prototype.toJSON = function() { const obj = {Size: this.size, disgust: this.disgust, madeBy: this.madeBy, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable teacher var teacger = new Mess(&quot;5&quot;, &quot;7&quot;, &quot;Lad&quot;); teacger.setRole(&quot;disturb&quot;); // output of Object and JSON/string associated with Teacher logItType(teacger); // object type is easy to work with in JavaScript logItType(teacger.toJSON()); // json/string is useful when passing data on internet . derpin around object ; Mess { size: &#39;5&#39;, disgust: &#39;7&#39;, madeBy: &#39;Lad&#39;, role: &#39;disturb&#39; } string ; {&#34;Size&#34;:&#34;5&#34;,&#34;disgust&#34;:&#34;7&#34;,&#34;madeBy&#34;:&#34;Lad&#34;,&#34;role&#34;:&#34;disturb&#34;} . // define an Array of messes made var minor = [ new Mess(&quot;8&quot;, &quot;3&quot;, &quot;Ann&quot;), new Mess(&quot;2&quot;, &quot;4&quot;, &quot;Pal&quot;), new Mess(&quot;6&quot;, &quot;5&quot;, &quot;Sal&quot;), new Mess(&quot;1&quot;, &quot;0&quot;, &quot;Mia&quot;), new Mess(&quot;10&quot;, &quot;9&quot;, &quot;Rad&quot;), new Mess(&quot;3&quot;, &quot;4&quot;, &quot;Telu&quot;) ]; // define a group of people and build group objects and json function Group(teacher, minor){ // 1 teacher, many student // start Classroom with Teacher teacger.setRole(&quot;disturb&quot;); this.teacger = teacher; this.Group = [teacher]; // add each Student to Classroom this.minor = minor; this.minor.forEach(minor =&gt; { minor.setRole(&quot;Minin&quot;); this.Group.push(minor); }); // build json/string format of Classroom this.json = []; this.Group.forEach(mess =&gt; this.json.push(mess.toJSON())); } // make a CompSci classroom from formerly defined teacher and students LatterPeople = new Group(teacger, minor); // output of Objects and JSON in CompSci classroom logItType(LatterPeople.Group); // constructed classroom object logItType(LatterPeople.Group[0].name); // abstract 1st objects name logItType(LatterPeople.json[0]); // show json conversion of 1st object to string logItType(JSON.parse(LatterPeople.json[0])); // show JSON.parse inverse of JSON.stringify . object ; [ Mess { size: &#39;5&#39;, disgust: &#39;7&#39;, madeBy: &#39;Lad&#39;, role: &#39;disturb&#39; }, Mess { size: &#39;8&#39;, disgust: &#39;3&#39;, madeBy: &#39;Ann&#39;, role: &#39;Minin&#39; }, Mess { size: &#39;2&#39;, disgust: &#39;4&#39;, madeBy: &#39;Pal&#39;, role: &#39;Minin&#39; }, Mess { size: &#39;6&#39;, disgust: &#39;5&#39;, madeBy: &#39;Sal&#39;, role: &#39;Minin&#39; }, Mess { size: &#39;1&#39;, disgust: &#39;0&#39;, madeBy: &#39;Mia&#39;, role: &#39;Minin&#39; }, Mess { size: &#39;10&#39;, disgust: &#39;9&#39;, madeBy: &#39;Rad&#39;, role: &#39;Minin&#39; }, Mess { size: &#39;3&#39;, disgust: &#39;4&#39;, madeBy: &#39;Telu&#39;, role: &#39;Minin&#39; } ] undefined ; undefined string ; {&#34;Size&#34;:&#34;5&#34;,&#34;disgust&#34;:&#34;7&#34;,&#34;madeBy&#34;:&#34;Lad&#34;,&#34;role&#34;:&#34;disturb&#34;} object ; { Size: &#39;5&#39;, disgust: &#39;7&#39;, madeBy: &#39;Lad&#39;, role: &#39;disturb&#39; } .",
            "url": "https://lovemydogs.github.io/Timeline/javascript/2020/09/25/javascript.html",
            "relUrl": "/javascript/2020/09/25/javascript.html",
            "date": " • Sep 25, 2020"
        }
        
    
  
    
        ,"post15": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. meep meep Doing my best . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . I love doing stuff . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://lovemydogs.github.io/Timeline/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post16": {
            "title": "Title",
            "content": "",
            "url": "https://lovemydogs.github.io/Timeline/2020/02/20/test-jvsc-604994ee-30c1-4d57-a373-2fb7f6918439e62a0298-6972-42ab-b9d8-c8ccf4531f32.html",
            "relUrl": "/2020/02/20/test-jvsc-604994ee-30c1-4d57-a373-2fb7f6918439e62a0298-6972-42ab-b9d8-c8ccf4531f32.html",
            "date": " • Feb 20, 2020"
        }
        
    
  

  
  
      ,"page0": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://lovemydogs.github.io/Timeline/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page1": {
          "title": "Notes",
          "content": "Notes . Python if/else statemetns and their use in quizzes and making requirements Bash use in terminal automization and making easy to check requirements for a computer The use of images and the key/subject that is necessary for code to work New possibilities in markdown and html . Vocab . key variables values .",
          "url": "https://lovemydogs.github.io/Timeline/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  

  

  

  

  

  
      ,"page7": {
          "title": "Notes for APCSP",
          "content": "Print does not need to be a string file, can be + with other things in it, and several variables can also be used within them Functions can create new commands and be used for things that will be repeated later on, see example in “doing my best” If/else statements/conditionals are useful for user input, and making several different outputs when necessary Variables can be changed and are useful for function commands or things that will be used in different circumstances and might be changed. Bash can be used for automation of downloading files and using git, while also using terminal things Images can be added to things with site.baseurl Keys are things that allow code to see what it is and run back to that .",
          "url": "https://lovemydogs.github.io/Timeline/_pages/notes.html",
          "relUrl": "/_pages/notes.html",
          "date": ""
      }
      
  

  
  

  
  

  
  

  
  

  

  
  

  
      ,"page14": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://lovemydogs.github.io/Timeline/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}